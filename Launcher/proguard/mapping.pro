com.eclipsesource.json.Json -> com.eclipsesource.json.Json:
    com.eclipsesource.json.JsonValue NULL -> NULL
    com.eclipsesource.json.JsonValue TRUE -> TRUE
    com.eclipsesource.json.JsonValue FALSE -> FALSE
    56:58:void <init>() -> <init>
    83:83:com.eclipsesource.json.JsonValue value(int) -> value
    94:94:com.eclipsesource.json.JsonValue value(long) -> value
    105:108:com.eclipsesource.json.JsonValue value(float) -> value
    119:122:com.eclipsesource.json.JsonValue value(double) -> value
    133:133:com.eclipsesource.json.JsonValue value(java.lang.String) -> value
    144:144:com.eclipsesource.json.JsonValue value(boolean) -> value
    154:154:com.eclipsesource.json.JsonValue array() -> array
    166:173:com.eclipsesource.json.JsonArray array(int[]) -> array
    185:192:com.eclipsesource.json.JsonArray array(long[]) -> array
    204:211:com.eclipsesource.json.JsonArray array(float[]) -> array
    223:230:com.eclipsesource.json.JsonArray array(double[]) -> array
    242:249:com.eclipsesource.json.JsonArray array(boolean[]) -> array
    260:267:com.eclipsesource.json.JsonArray array(java.lang.String[]) -> array
    277:277:com.eclipsesource.json.JsonObject object() -> object
    291:298:com.eclipsesource.json.JsonValue parse(java.lang.String) -> parse
    320:323:com.eclipsesource.json.JsonValue parse(java.io.Reader) -> parse
    327:330:java.lang.String cutOffPointZero(java.lang.String) -> cutOffPointZero
    63:73:void <clinit>() -> <clinit>
com.eclipsesource.json.JsonArray -> com.eclipsesource.json.JsonArray:
    java.util.List values -> values
    70:72:void <init>() -> <init>
    81:82:void <init>(com.eclipsesource.json.JsonArray) -> <init>
    84:93:void <init>(com.eclipsesource.json.JsonArray,boolean) -> <init>
    116:116:com.eclipsesource.json.JsonArray readFrom(java.io.Reader) -> readFrom
    133:133:com.eclipsesource.json.JsonArray readFrom(java.lang.String) -> readFrom
    149:149:com.eclipsesource.json.JsonArray unmodifiableArray(com.eclipsesource.json.JsonArray) -> unmodifiableArray
    161:162:com.eclipsesource.json.JsonArray add(int) -> add
    174:175:com.eclipsesource.json.JsonArray add(long) -> add
    187:188:com.eclipsesource.json.JsonArray add(float) -> add
    200:201:com.eclipsesource.json.JsonArray add(double) -> add
    213:214:com.eclipsesource.json.JsonArray add(boolean) -> add
    225:226:com.eclipsesource.json.JsonArray add(java.lang.String) -> add
    237:241:com.eclipsesource.json.JsonArray add(com.eclipsesource.json.JsonValue) -> add
    258:259:com.eclipsesource.json.JsonArray set(int,int) -> set
    276:277:com.eclipsesource.json.JsonArray set(int,long) -> set
    294:295:com.eclipsesource.json.JsonArray set(int,float) -> set
    312:313:com.eclipsesource.json.JsonArray set(int,double) -> set
    330:331:com.eclipsesource.json.JsonArray set(int,boolean) -> set
    348:349:com.eclipsesource.json.JsonArray set(int,java.lang.String) -> set
    365:369:com.eclipsesource.json.JsonArray set(int,com.eclipsesource.json.JsonValue) -> set
    383:384:com.eclipsesource.json.JsonArray remove(int) -> remove
    393:393:int size() -> size
    402:402:boolean isEmpty() -> isEmpty
    416:416:com.eclipsesource.json.JsonValue get(int) -> get
    427:427:java.util.List values() -> values
    437:438:java.util.Iterator iterator() -> iterator
    456:467:void write(com.eclipsesource.json.JsonWriter) -> write
    471:471:boolean isArray() -> isArray
    476:476:com.eclipsesource.json.JsonArray asArray() -> asArray
    481:481:int hashCode() -> hashCode
    486:496:boolean equals(java.lang.Object) -> equals
com.eclipsesource.json.JsonArray$1 -> com.eclipsesource.json.JsonArray$1:
    java.util.Iterator val$iterator -> val$iterator
    com.eclipsesource.json.JsonArray this$0 -> this$0
    438:438:void <init>(com.eclipsesource.json.JsonArray,java.util.Iterator) -> <init>
    441:441:boolean hasNext() -> hasNext
    445:445:com.eclipsesource.json.JsonValue next() -> next
    449:449:void remove() -> remove
    438:438:java.lang.Object next() -> next
com.eclipsesource.json.JsonLiteral -> com.eclipsesource.json.JsonLiteral:
    java.lang.String value -> value
    boolean isNull -> isNull
    boolean isTrue -> isTrue
    boolean isFalse -> isFalse
    35:40:void <init>(java.lang.String) -> <init>
    44:45:void write(com.eclipsesource.json.JsonWriter) -> write
    49:49:java.lang.String toString() -> toString
    54:54:int hashCode() -> hashCode
    59:59:boolean isNull() -> isNull
    64:64:boolean isTrue() -> isTrue
    69:69:boolean isFalse() -> isFalse
    74:74:boolean isBoolean() -> isBoolean
    79:79:boolean asBoolean() -> asBoolean
    84:94:boolean equals(java.lang.Object) -> equals
com.eclipsesource.json.JsonNumber -> com.eclipsesource.json.JsonNumber:
    java.lang.String string -> string
    32:37:void <init>(java.lang.String) -> <init>
    41:41:java.lang.String toString() -> toString
    46:47:void write(com.eclipsesource.json.JsonWriter) -> write
    51:51:boolean isNumber() -> isNumber
    56:56:int asInt() -> asInt
    61:61:long asLong() -> asLong
    66:66:float asFloat() -> asFloat
    71:71:double asDouble() -> asDouble
    76:76:int hashCode() -> hashCode
    81:91:boolean equals(java.lang.Object) -> equals
com.eclipsesource.json.JsonObject -> com.eclipsesource.json.JsonObject:
    java.util.List names -> names
    java.util.List values -> values
    com.eclipsesource.json.JsonObject$HashIndexTable table -> table
    82:86:void <init>() -> <init>
    95:96:void <init>(com.eclipsesource.json.JsonObject) -> <init>
    98:111:void <init>(com.eclipsesource.json.JsonObject,boolean) -> <init>
    134:134:com.eclipsesource.json.JsonObject readFrom(java.io.Reader) -> readFrom
    151:151:com.eclipsesource.json.JsonObject readFrom(java.lang.String) -> readFrom
    168:168:com.eclipsesource.json.JsonObject unmodifiableObject(com.eclipsesource.json.JsonObject) -> unmodifiableObject
    190:191:com.eclipsesource.json.JsonObject add(java.lang.String,int) -> add
    213:214:com.eclipsesource.json.JsonObject add(java.lang.String,long) -> add
    236:237:com.eclipsesource.json.JsonObject add(java.lang.String,float) -> add
    259:260:com.eclipsesource.json.JsonObject add(java.lang.String,double) -> add
    282:283:com.eclipsesource.json.JsonObject add(java.lang.String,boolean) -> add
    305:306:com.eclipsesource.json.JsonObject add(java.lang.String,java.lang.String) -> add
    328:337:com.eclipsesource.json.JsonObject add(java.lang.String,com.eclipsesource.json.JsonValue) -> add
    358:359:com.eclipsesource.json.JsonObject set(java.lang.String,int) -> set
    380:381:com.eclipsesource.json.JsonObject set(java.lang.String,long) -> set
    402:403:com.eclipsesource.json.JsonObject set(java.lang.String,float) -> set
    424:425:com.eclipsesource.json.JsonObject set(java.lang.String,double) -> set
    446:447:com.eclipsesource.json.JsonObject set(java.lang.String,boolean) -> set
    468:469:com.eclipsesource.json.JsonObject set(java.lang.String,java.lang.String) -> set
    489:503:com.eclipsesource.json.JsonObject set(java.lang.String,com.eclipsesource.json.JsonValue) -> set
    516:525:com.eclipsesource.json.JsonObject remove(java.lang.String) -> remove
    538:544:com.eclipsesource.json.JsonObject merge(com.eclipsesource.json.JsonObject) -> merge
    557:561:com.eclipsesource.json.JsonValue get(java.lang.String) -> get
    579:580:int getInt(java.lang.String,int) -> getInt
    598:599:long getLong(java.lang.String,long) -> getLong
    617:618:float getFloat(java.lang.String,float) -> getFloat
    636:637:double getDouble(java.lang.String,double) -> getDouble
    655:656:boolean getBoolean(java.lang.String,boolean) -> getBoolean
    673:674:java.lang.String getString(java.lang.String,java.lang.String) -> getString
    683:683:int size() -> size
    692:692:boolean isEmpty() -> isEmpty
    703:703:java.util.List names() -> names
    713:715:java.util.Iterator iterator() -> iterator
    736:750:void write(com.eclipsesource.json.JsonWriter) -> write
    754:754:boolean isObject() -> isObject
    759:759:com.eclipsesource.json.JsonObject asObject() -> asObject
    764:767:int hashCode() -> hashCode
    772:782:boolean equals(java.lang.Object) -> equals
    786:790:int indexOf(java.lang.String) -> indexOf
    796:799:void readObject(java.io.ObjectInputStream) -> readObject
    802:806:void updateHashIndex() -> updateHashIndex
com.eclipsesource.json.JsonObject$1 -> com.eclipsesource.json.JsonObject$1:
    java.util.Iterator val$namesIterator -> val$namesIterator
    java.util.Iterator val$valuesIterator -> val$valuesIterator
    com.eclipsesource.json.JsonObject this$0 -> this$0
    715:715:void <init>(com.eclipsesource.json.JsonObject,java.util.Iterator,java.util.Iterator) -> <init>
    718:718:boolean hasNext() -> hasNext
    722:724:com.eclipsesource.json.JsonObject$Member next() -> next
    728:728:void remove() -> remove
    715:715:java.lang.Object next() -> next
com.eclipsesource.json.JsonObject$HashIndexTable -> com.eclipsesource.json.JsonObject$HashIndexTable:
    byte[] hashTable -> hashTable
    866:869:void <init>() -> <init>
    866:873:void <init>(com.eclipsesource.json.JsonObject$HashIndexTable) -> <init>
    876:883:void add(java.lang.String,int) -> add
    886:893:void remove(int) -> remove
    896:898:int get(java.lang.Object) -> get
    902:902:int hashSlotFor(java.lang.Object) -> hashSlotFor
com.eclipsesource.json.JsonObject$Member -> com.eclipsesource.json.JsonObject$Member:
    java.lang.String name -> name
    com.eclipsesource.json.JsonValue value -> value
    816:819:void <init>(java.lang.String,com.eclipsesource.json.JsonValue) -> <init>
    827:827:java.lang.String getName() -> getName
    836:836:com.eclipsesource.json.JsonValue getValue() -> getValue
    841:844:int hashCode() -> hashCode
    849:859:boolean equals(java.lang.Object) -> equals
    811:811:java.lang.String access$000(com.eclipsesource.json.JsonObject$Member) -> access$000
    811:811:com.eclipsesource.json.JsonValue access$100(com.eclipsesource.json.JsonObject$Member) -> access$100
com.eclipsesource.json.JsonParser -> com.eclipsesource.json.JsonParser:
    int MIN_BUFFER_SIZE -> MIN_BUFFER_SIZE
    int DEFAULT_BUFFER_SIZE -> DEFAULT_BUFFER_SIZE
    java.io.Reader reader -> reader
    char[] buffer -> buffer
    int bufferOffset -> bufferOffset
    int index -> index
    int fill -> fill
    int line -> line
    int lineOffset -> lineOffset
    int current -> current
    java.lang.StringBuilder captureBuffer -> captureBuffer
    int captureStart -> captureStart
    55:57:void <init>(java.lang.String) -> <init>
    60:61:void <init>(java.io.Reader) -> <init>
    63:68:void <init>(java.io.Reader,int) -> <init>
    71:78:com.eclipsesource.json.JsonValue parse() -> parse
    82:108:com.eclipsesource.json.JsonValue readValue() -> readValue
    113:127:com.eclipsesource.json.JsonArray readArray() -> readArray
    131:151:com.eclipsesource.json.JsonObject readObject() -> readObject
    155:158:java.lang.String readName() -> readName
    162:166:com.eclipsesource.json.JsonValue readNull() -> readNull
    170:174:com.eclipsesource.json.JsonValue readTrue() -> readTrue
    178:183:com.eclipsesource.json.JsonValue readFalse() -> readFalse
    187:190:void readRequiredChar(char) -> readRequiredChar
    193:193:com.eclipsesource.json.JsonValue readString() -> readString
    197:212:java.lang.String readStringInternal() -> readStringInternal
    216:253:void readEscape() -> readEscape
    256:268:com.eclipsesource.json.JsonValue readNumber() -> readNumber
    272:280:boolean readFraction() -> readFraction
    284:295:boolean readExponent() -> readExponent
    299:303:boolean readChar(char) -> readChar
    307:311:boolean readDigit() -> readDigit
    315:318:void skipWhiteSpace() -> skipWhiteSpace
    321:339:void read() -> read
    342:346:void startCapture() -> startCapture
    349:352:void pauseCapture() -> pauseCapture
    355:365:java.lang.String endCapture() -> endCapture
    369:372:com.eclipsesource.json.ParseException expected(java.lang.String) -> expected
    376:379:com.eclipsesource.json.ParseException error(java.lang.String) -> error
    383:383:boolean isWhiteSpace() -> isWhiteSpace
    387:387:boolean isDigit() -> isDigit
    391:391:boolean isHexDigit() -> isHexDigit
    397:397:boolean isEndOfText() -> isEndOfText
com.eclipsesource.json.JsonString -> com.eclipsesource.json.JsonString:
    java.lang.String string -> string
    32:37:void <init>(java.lang.String) -> <init>
    41:42:void write(com.eclipsesource.json.JsonWriter) -> write
    46:46:boolean isString() -> isString
    51:51:java.lang.String asString() -> asString
    56:56:int hashCode() -> hashCode
    61:71:boolean equals(java.lang.Object) -> equals
com.eclipsesource.json.JsonValue -> com.eclipsesource.json.JsonValue:
    com.eclipsesource.json.JsonValue TRUE -> TRUE
    com.eclipsesource.json.JsonValue FALSE -> FALSE
    com.eclipsesource.json.JsonValue NULL -> NULL
    87:89:void <init>() -> <init>
    110:110:com.eclipsesource.json.JsonValue readFrom(java.io.Reader) -> readFrom
    126:129:com.eclipsesource.json.JsonValue readFrom(java.lang.String) -> readFrom
    143:143:com.eclipsesource.json.JsonValue valueOf(int) -> valueOf
    156:156:com.eclipsesource.json.JsonValue valueOf(long) -> valueOf
    169:169:com.eclipsesource.json.JsonValue valueOf(float) -> valueOf
    182:182:com.eclipsesource.json.JsonValue valueOf(double) -> valueOf
    195:195:com.eclipsesource.json.JsonValue valueOf(java.lang.String) -> valueOf
    208:208:com.eclipsesource.json.JsonValue valueOf(boolean) -> valueOf
    218:218:boolean isObject() -> isObject
    228:228:boolean isArray() -> isArray
    237:237:boolean isNumber() -> isNumber
    246:246:boolean isString() -> isString
    256:256:boolean isBoolean() -> isBoolean
    265:265:boolean isTrue() -> isTrue
    274:274:boolean isFalse() -> isFalse
    283:283:boolean isNull() -> isNull
    295:295:com.eclipsesource.json.JsonObject asObject() -> asObject
    307:307:com.eclipsesource.json.JsonArray asArray() -> asArray
    326:326:int asInt() -> asInt
    345:345:long asLong() -> asLong
    361:361:float asFloat() -> asFloat
    377:377:double asDouble() -> asDouble
    389:389:java.lang.String asString() -> asString
    401:401:boolean asBoolean() -> asBoolean
    417:418:void writeTo(java.io.Writer) -> writeTo
    434:443:void writeTo(java.io.Writer,com.eclipsesource.json.WriterConfig) -> writeTo
    454:454:java.lang.String toString() -> toString
    465:472:java.lang.String toString(com.eclipsesource.json.WriterConfig) -> toString
    490:490:boolean equals(java.lang.Object) -> equals
    495:495:int hashCode() -> hashCode
    void write(com.eclipsesource.json.JsonWriter) -> write
    71:85:void <clinit>() -> <clinit>
com.eclipsesource.json.JsonWriter -> com.eclipsesource.json.JsonWriter:
    int CONTROL_CHARACTERS_END -> CONTROL_CHARACTERS_END
    char[] QUOT_CHARS -> QUOT_CHARS
    char[] BS_CHARS -> BS_CHARS
    char[] LF_CHARS -> LF_CHARS
    char[] CR_CHARS -> CR_CHARS
    char[] TAB_CHARS -> TAB_CHARS
    char[] UNICODE_2028_CHARS -> UNICODE_2028_CHARS
    char[] UNICODE_2029_CHARS -> UNICODE_2029_CHARS
    char[] HEX_DIGITS -> HEX_DIGITS
    java.io.Writer writer -> writer
    46:48:void <init>(java.io.Writer) -> <init>
    51:52:void writeLiteral(java.lang.String) -> writeLiteral
    55:56:void writeNumber(java.lang.String) -> writeNumber
    59:62:void writeString(java.lang.String) -> writeString
    65:66:void writeArrayOpen() -> writeArrayOpen
    69:70:void writeArrayClose() -> writeArrayClose
    73:74:void writeArraySeparator() -> writeArraySeparator
    77:78:void writeObjectOpen() -> writeObjectOpen
    81:82:void writeObjectClose() -> writeObjectClose
    85:88:void writeMemberName(java.lang.String) -> writeMemberName
    91:92:void writeMemberSeparator() -> writeMemberSeparator
    95:96:void writeObjectSeparator() -> writeObjectSeparator
    99:110:void writeJsonString(java.lang.String) -> writeJsonString
    113:142:char[] getReplacementChars(char) -> getReplacementChars
    32:41:void <clinit>() -> <clinit>
com.eclipsesource.json.ParseException -> com.eclipsesource.json.ParseException:
    int offset -> offset
    int line -> line
    int column -> column
    35:39:void <init>(java.lang.String,int,int,int) -> <init>
    48:48:int getOffset() -> getOffset
    57:57:int getLine() -> getLine
    67:67:int getColumn() -> getColumn
com.eclipsesource.json.PrettyPrint -> com.eclipsesource.json.PrettyPrint:
    char[] indentChars -> indentChars
    41:43:void <init>(char[]) -> <init>
    51:51:com.eclipsesource.json.PrettyPrint singleLine() -> singleLine
    62:67:com.eclipsesource.json.PrettyPrint indentWithSpaces(int) -> indentWithSpaces
    76:76:com.eclipsesource.json.PrettyPrint indentWithTabs() -> indentWithTabs
    81:81:com.eclipsesource.json.JsonWriter createWriter(java.io.Writer) -> createWriter
com.eclipsesource.json.PrettyPrint$1 -> com.eclipsesource.json.PrettyPrint$1:
com.eclipsesource.json.PrettyPrint$PrettyPrintWriter -> com.eclipsesource.json.PrettyPrint$PrettyPrintWriter:
    char[] indentChars -> indentChars
    int indent -> indent
    90:92:void <init>(java.io.Writer,char[]) -> <init>
    96:99:void writeArrayOpen() -> writeArrayOpen
    103:106:void writeArrayClose() -> writeArrayClose
    110:114:void writeArraySeparator() -> writeArraySeparator
    118:121:void writeObjectOpen() -> writeObjectOpen
    125:128:void writeObjectClose() -> writeObjectClose
    132:134:void writeMemberSeparator() -> writeMemberSeparator
    138:142:void writeObjectSeparator() -> writeObjectSeparator
    145:152:boolean writeNewLine() -> writeNewLine
    84:84:void <init>(java.io.Writer,char[],com.eclipsesource.json.PrettyPrint$1) -> <init>
com.eclipsesource.json.WriterConfig -> com.eclipsesource.json.WriterConfig:
    com.eclipsesource.json.WriterConfig MINIMAL -> MINIMAL
    com.eclipsesource.json.WriterConfig PRETTY_PRINT -> PRETTY_PRINT
    30:30:void <init>() -> <init>
    com.eclipsesource.json.JsonWriter createWriter(java.io.Writer) -> createWriter
    35:46:void <clinit>() -> <clinit>
com.eclipsesource.json.WriterConfig$1 -> com.eclipsesource.json.WriterConfig$1:
    35:35:void <init>() -> <init>
    38:38:com.eclipsesource.json.JsonWriter createWriter(java.io.Writer) -> createWriter
com.eclipsesource.json.WritingBuffer -> com.eclipsesource.json.WritingBuffer:
    java.io.Writer writer -> writer
    char[] buffer -> buffer
    int fill -> fill
    41:42:void <init>(java.io.Writer) -> <init>
    38:47:void <init>(java.io.Writer,int) -> <init>
    51:55:void write(int) -> write
    59:68:void write(char[],int,int) -> write
    72:81:void write(java.lang.String,int,int) -> write
    88:90:void flush() -> flush
    97:97:void close() -> close
com.mojang.authlib.Agent -> com.mojang.authlib.Agent:
    com.mojang.authlib.Agent MINECRAFT -> MINECRAFT
    com.mojang.authlib.Agent SCROLLS -> SCROLLS
    java.lang.String name -> name
    int version -> version
    10:13:void <init>(java.lang.String,int) -> <init>
    16:16:java.lang.String getName() -> getName
    20:20:int getVersion() -> getVersion
    25:25:java.lang.String toString() -> toString
    4:5:void <clinit>() -> <clinit>
com.mojang.authlib.AuthenticationService -> com.mojang.authlib.AuthenticationService:
    com.mojang.authlib.UserAuthentication createUserAuthentication(com.mojang.authlib.Agent) -> createUserAuthentication
    com.mojang.authlib.minecraft.MinecraftSessionService createMinecraftSessionService() -> createMinecraftSessionService
    com.mojang.authlib.GameProfileRepository createProfileRepository() -> createProfileRepository
com.mojang.authlib.BaseAuthenticationService -> com.mojang.authlib.BaseAuthenticationService:
    3:3:void <init>() -> <init>
com.mojang.authlib.BaseUserAuthentication -> com.mojang.authlib.BaseUserAuthentication:
    org.apache.logging.log4j.Logger LOGGER -> LOGGER
    java.lang.String STORAGE_KEY_PROFILE_NAME -> STORAGE_KEY_PROFILE_NAME
    java.lang.String STORAGE_KEY_PROFILE_ID -> STORAGE_KEY_PROFILE_ID
    java.lang.String STORAGE_KEY_PROFILE_PROPERTIES -> STORAGE_KEY_PROFILE_PROPERTIES
    java.lang.String STORAGE_KEY_USER_NAME -> STORAGE_KEY_USER_NAME
    java.lang.String STORAGE_KEY_USER_ID -> STORAGE_KEY_USER_ID
    java.lang.String STORAGE_KEY_USER_PROPERTIES -> STORAGE_KEY_USER_PROPERTIES
    com.mojang.authlib.AuthenticationService authenticationService -> authenticationService
    com.mojang.authlib.properties.PropertyMap userProperties -> userProperties
    java.lang.String userid -> userid
    java.lang.String username -> username
    java.lang.String password -> password
    com.mojang.authlib.GameProfile selectedProfile -> selectedProfile
    com.mojang.authlib.UserType userType -> userType
    27:37:void <init>(com.mojang.authlib.AuthenticationService) -> <init>
    41:41:boolean canLogIn() -> canLogIn
    46:51:void logOut() -> logOut
    55:55:boolean isLoggedIn() -> isLoggedIn
    60:65:void setUsername(java.lang.String) -> setUsername
    69:74:void setPassword(java.lang.String) -> setPassword
    77:77:java.lang.String getUsername() -> getUsername
    81:81:java.lang.String getPassword() -> getPassword
    87:139:void loadFromStorage(java.util.Map) -> loadFromStorage
    143:185:java.util.Map saveForStorage() -> saveForStorage
    189:190:void setSelectedProfile(com.mojang.authlib.GameProfile) -> setSelectedProfile
    194:194:com.mojang.authlib.GameProfile getSelectedProfile() -> getSelectedProfile
    199:225:java.lang.String toString() -> toString
    229:229:com.mojang.authlib.AuthenticationService getAuthenticationService() -> getAuthenticationService
    234:234:java.lang.String getUserID() -> getUserID
    239:244:com.mojang.authlib.properties.PropertyMap getUserProperties() -> getUserProperties
    249:249:com.mojang.authlib.properties.PropertyMap getModifiableUserProperties() -> getModifiableUserProperties
    254:257:com.mojang.authlib.UserType getUserType() -> getUserType
    262:263:void setUserType(com.mojang.authlib.UserType) -> setUserType
    266:267:void setUserid(java.lang.String) -> setUserid
    17:17:void <clinit>() -> <clinit>
com.mojang.authlib.GameProfile -> com.mojang.authlib.GameProfile:
    java.util.UUID id -> id
    java.lang.String name -> name
    com.mojang.authlib.properties.PropertyMap properties -> properties
    boolean legacy -> legacy
    void <init>(java.util.UUID,java.lang.String) -> <init>
    void <init>(java.lang.String,java.lang.String) -> <init>
    java.util.UUID getId() -> getId
    java.lang.String getId() -> getId
    java.util.UUID getUUID() -> getUUID
    java.lang.String getName() -> getName
    com.mojang.authlib.properties.PropertyMap getProperties() -> getProperties
    boolean isComplete() -> isComplete
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    boolean isLegacy() -> isLegacy
com.mojang.authlib.GameProfileRepository -> com.mojang.authlib.GameProfileRepository:
    void findProfilesByNames(java.lang.String[],com.mojang.authlib.Agent,com.mojang.authlib.ProfileLookupCallback) -> findProfilesByNames
com.mojang.authlib.ProfileLookupCallback -> com.mojang.authlib.ProfileLookupCallback:
    void onProfileLookupSucceeded(com.mojang.authlib.GameProfile) -> onProfileLookupSucceeded
    void onProfileLookupFailed(com.mojang.authlib.GameProfile,java.lang.Exception) -> onProfileLookupFailed
com.mojang.authlib.UserAuthentication -> com.mojang.authlib.UserAuthentication:
    boolean canLogIn() -> canLogIn
    void logIn() -> logIn
    void logOut() -> logOut
    boolean isLoggedIn() -> isLoggedIn
    boolean canPlayOnline() -> canPlayOnline
    com.mojang.authlib.GameProfile[] getAvailableProfiles() -> getAvailableProfiles
    com.mojang.authlib.GameProfile getSelectedProfile() -> getSelectedProfile
    void selectGameProfile(com.mojang.authlib.GameProfile) -> selectGameProfile
    void loadFromStorage(java.util.Map) -> loadFromStorage
    java.util.Map saveForStorage() -> saveForStorage
    void setUsername(java.lang.String) -> setUsername
    void setPassword(java.lang.String) -> setPassword
    java.lang.String getAuthenticatedToken() -> getAuthenticatedToken
    java.lang.String getUserID() -> getUserID
    com.mojang.authlib.properties.PropertyMap getUserProperties() -> getUserProperties
    com.mojang.authlib.UserType getUserType() -> getUserType
com.mojang.authlib.UserType -> com.mojang.authlib.UserType:
    com.mojang.authlib.UserType LEGACY -> LEGACY
    com.mojang.authlib.UserType MOJANG -> MOJANG
    java.util.Map BY_NAME -> BY_NAME
    java.lang.String name -> name
    com.mojang.authlib.UserType[] $VALUES -> $VALUES
    6:6:com.mojang.authlib.UserType[] values() -> values
    6:6:com.mojang.authlib.UserType valueOf(java.lang.String) -> valueOf
    13:15:void <init>(java.lang.String,int,java.lang.String) -> <init>
    18:18:com.mojang.authlib.UserType byName(java.lang.String) -> byName
    22:22:java.lang.String getName() -> getName
    6:29:void <clinit>() -> <clinit>
com.mojang.authlib.exceptions.AuthenticationException -> com.mojang.authlib.exceptions.AuthenticationException:
    4:5:void <init>() -> <init>
    8:9:void <init>(java.lang.String) -> <init>
    12:13:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    16:17:void <init>(java.lang.Throwable) -> <init>
com.mojang.authlib.exceptions.AuthenticationUnavailableException -> com.mojang.authlib.exceptions.AuthenticationUnavailableException:
    4:5:void <init>() -> <init>
    8:9:void <init>(java.lang.String) -> <init>
    12:13:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    16:17:void <init>(java.lang.Throwable) -> <init>
com.mojang.authlib.exceptions.InvalidCredentialsException -> com.mojang.authlib.exceptions.InvalidCredentialsException:
    4:5:void <init>() -> <init>
    8:9:void <init>(java.lang.String) -> <init>
    12:13:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    16:17:void <init>(java.lang.Throwable) -> <init>
com.mojang.authlib.minecraft.BaseMinecraftSessionService -> com.mojang.authlib.minecraft.BaseMinecraftSessionService:
    com.mojang.authlib.AuthenticationService authenticationService -> authenticationService
    8:10:void <init>(com.mojang.authlib.AuthenticationService) -> <init>
    13:13:com.mojang.authlib.AuthenticationService getAuthenticationService() -> getAuthenticationService
com.mojang.authlib.minecraft.InsecureTextureException -> com.mojang.authlib.minecraft.InsecureTextureException:
    11:12:void <init>(java.lang.String) -> <init>
com.mojang.authlib.minecraft.InsecureTextureException$MissingTextureException -> com.mojang.authlib.minecraft.InsecureTextureException$MissingTextureException:
    40:41:void <init>() -> <init>
com.mojang.authlib.minecraft.InsecureTextureException$OutdatedTextureException -> com.mojang.authlib.minecraft.InsecureTextureException$OutdatedTextureException:
    java.util.Date validFrom -> validFrom
    java.util.Calendar limit -> limit
    19:22:void <init>(java.util.Date,java.util.Calendar) -> <init>
com.mojang.authlib.minecraft.InsecureTextureException$WrongTextureOwnerException -> com.mojang.authlib.minecraft.InsecureTextureException$WrongTextureOwnerException:
    com.mojang.authlib.GameProfile expected -> expected
    java.util.UUID resultId -> resultId
    java.lang.String resultName -> resultName
    31:35:void <init>(com.mojang.authlib.GameProfile,java.util.UUID,java.lang.String) -> <init>
com.mojang.authlib.minecraft.MinecraftProfileTexture -> com.mojang.authlib.minecraft.MinecraftProfileTexture:
    java.util.Set PROFILE_TEXTURE_TYPES -> PROFILE_TEXTURE_TYPES
    int PROFILE_TEXTURE_COUNT -> PROFILE_TEXTURE_COUNT
    java.lang.String url -> url
    java.lang.String hash -> hash
    16:17:void <init>(java.lang.String) -> <init>
    19:22:void <init>(java.lang.String,java.lang.String) -> <init>
    26:26:java.lang.String toString() -> toString
    31:31:java.lang.String getHash() -> getHash
    36:36:java.lang.String getMetadata(java.lang.String) -> getMetadata
    41:41:java.lang.String getUrl() -> getUrl
    45:54:java.lang.String baseName(java.lang.String) -> baseName
    8:9:void <clinit>() -> <clinit>
com.mojang.authlib.minecraft.MinecraftProfileTexture$Type -> com.mojang.authlib.minecraft.MinecraftProfileTexture$Type:
    com.mojang.authlib.minecraft.MinecraftProfileTexture$Type SKIN -> SKIN
    com.mojang.authlib.minecraft.MinecraftProfileTexture$Type CAPE -> CAPE
    com.mojang.authlib.minecraft.MinecraftProfileTexture$Type ELYTRA -> ELYTRA
    com.mojang.authlib.minecraft.MinecraftProfileTexture$Type[] $VALUES -> $VALUES
    57:57:com.mojang.authlib.minecraft.MinecraftProfileTexture$Type[] values() -> values
    57:57:com.mojang.authlib.minecraft.MinecraftProfileTexture$Type valueOf(java.lang.String) -> valueOf
    57:57:void <init>(java.lang.String,int) -> <init>
    57:60:void <clinit>() -> <clinit>
com.mojang.authlib.minecraft.MinecraftSessionService -> com.mojang.authlib.minecraft.MinecraftSessionService:
    void joinServer(com.mojang.authlib.GameProfile,java.lang.String,java.lang.String) -> joinServer
    com.mojang.authlib.GameProfile hasJoinedServer(com.mojang.authlib.GameProfile,java.lang.String) -> hasJoinedServer
    com.mojang.authlib.GameProfile hasJoinedServer(com.mojang.authlib.GameProfile,java.lang.String,java.net.InetAddress) -> hasJoinedServer
    java.util.Map getTextures(com.mojang.authlib.GameProfile,boolean) -> getTextures
    com.mojang.authlib.GameProfile fillProfileProperties(com.mojang.authlib.GameProfile,boolean) -> fillProfileProperties
com.mojang.authlib.properties.Property -> com.mojang.authlib.properties.Property:
    java.lang.String name -> name
    java.lang.String value -> value
    java.lang.String signature -> signature
    17:18:void <init>(java.lang.String,java.lang.String) -> <init>
    20:24:void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    27:27:java.lang.String getName() -> getName
    31:31:java.lang.String getValue() -> getValue
    35:35:java.lang.String getSignature() -> getSignature
    39:39:boolean hasSignature() -> hasSignature
    44:55:boolean isSignatureValid(java.security.PublicKey) -> isSignatureValid
com.mojang.authlib.properties.PropertyMap -> com.mojang.authlib.properties.PropertyMap:
    com.google.common.collect.Multimap properties -> properties
    18:26:void <init>() -> <init>
    23:23:com.google.common.collect.Multimap delegate() -> delegate
    18:18:java.lang.Object delegate() -> delegate
com.mojang.authlib.properties.PropertyMap$Serializer -> com.mojang.authlib.properties.PropertyMap$Serializer:
    26:26:void <init>() -> <init>
    29:57:com.mojang.authlib.properties.PropertyMap deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
    62:77:com.google.gson.JsonElement serialize(com.mojang.authlib.properties.PropertyMap,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    26:26:com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    26:26:java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
com.mojang.authlib.yggdrasil.CompatBridge -> com.mojang.authlib.yggdrasil.CompatBridge:
    int PROFILES_MAX_BATCH_SIZE -> PROFILES_MAX_BATCH_SIZE
    21:22:void <init>() -> <init>
    26:27:com.mojang.authlib.yggdrasil.CompatProfile checkServer(java.lang.String,java.lang.String) -> checkServer
    32:38:boolean joinServer(java.lang.String,java.lang.String,java.lang.String) -> joinServer
    43:43:com.mojang.authlib.yggdrasil.CompatProfile profileByUUID(java.util.UUID) -> profileByUUID
    48:48:com.mojang.authlib.yggdrasil.CompatProfile profileByUsername(java.lang.String) -> profileByUsername
    53:62:com.mojang.authlib.yggdrasil.CompatProfile[] profilesByUsername(java.lang.String[]) -> profilesByUsername
com.mojang.authlib.yggdrasil.CompatProfile -> com.mojang.authlib.yggdrasil.CompatProfile:
    java.lang.String SKIN_URL_PROPERTY -> SKIN_URL_PROPERTY
    java.lang.String SKIN_DIGEST_PROPERTY -> SKIN_DIGEST_PROPERTY
    java.lang.String CLOAK_URL_PROPERTY -> CLOAK_URL_PROPERTY
    java.lang.String CLOAK_DIGEST_PROPERTY -> CLOAK_DIGEST_PROPERTY
    java.util.UUID uuid -> uuid
    java.lang.String uuidHash -> uuidHash
    java.lang.String username -> username
    java.lang.String skinURL -> skinURL
    java.lang.String skinDigest -> skinDigest
    java.lang.String cloakURL -> cloakURL
    java.lang.String cloakDigest -> cloakDigest
    25:33:void <init>(java.util.UUID,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    36:49:int countProperties() -> countProperties
    53:57:com.mojang.authlib.yggdrasil.CompatProfile fromPlayerProfile(launcher.client.PlayerProfile) -> fromPlayerProfile
com.mojang.authlib.yggdrasil.LegacyBridge -> com.mojang.authlib.yggdrasil.LegacyBridge:
    14:15:void <init>() -> <init>
    19:20:boolean checkServer(java.lang.String,java.lang.String) -> checkServer
    25:27:java.lang.String getCloakURL(java.lang.String) -> getCloakURL
    32:34:java.lang.String getSkinURL(java.lang.String) -> getSkinURL
    39:48:java.lang.String joinServer(java.lang.String,java.lang.String,java.lang.String) -> joinServer
com.mojang.authlib.yggdrasil.ProfileIncompleteException -> com.mojang.authlib.yggdrasil.ProfileIncompleteException:
    4:5:void <init>() -> <init>
    8:9:void <init>(java.lang.String) -> <init>
    12:13:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    16:17:void <init>(java.lang.Throwable) -> <init>
com.mojang.authlib.yggdrasil.ProfileNotFoundException -> com.mojang.authlib.yggdrasil.ProfileNotFoundException:
    4:5:void <init>() -> <init>
    8:9:void <init>(java.lang.String) -> <init>
    12:13:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    16:17:void <init>(java.lang.Throwable) -> <init>
com.mojang.authlib.yggdrasil.YggdrasilAuthenticationService -> com.mojang.authlib.yggdrasil.YggdrasilAuthenticationService:
    14:16:void <init>(java.net.Proxy,java.lang.String) -> <init>
    20:20:com.mojang.authlib.minecraft.MinecraftSessionService createMinecraftSessionService() -> createMinecraftSessionService
    25:25:com.mojang.authlib.GameProfileRepository createProfileRepository() -> createProfileRepository
    30:30:com.mojang.authlib.UserAuthentication createUserAuthentication(com.mojang.authlib.Agent) -> createUserAuthentication
com.mojang.authlib.yggdrasil.YggdrasilGameProfileRepository -> com.mojang.authlib.yggdrasil.YggdrasilGameProfileRepository:
    long BUSY_WAIT_MS -> BUSY_WAIT_MS
    long ERROR_BUSY_WAIT_MS -> ERROR_BUSY_WAIT_MS
    23:25:void <init>() -> <init>
    29:67:void findProfilesByNames(java.lang.String[],com.mojang.authlib.Agent,com.mojang.authlib.ProfileLookupCallback) -> findProfilesByNames
    71:75:void busyWait(long) -> busyWait
    16:20:void <clinit>() -> <clinit>
com.mojang.authlib.yggdrasil.YggdrasilMinecraftSessionService -> com.mojang.authlib.yggdrasil.YggdrasilMinecraftSessionService:
    com.google.gson.JsonParser JSON_PARSER -> JSON_PARSER
    boolean NO_TEXTURES -> NO_TEXTURES
    36:38:void <init>(com.mojang.authlib.AuthenticationService) -> <init>
    43:67:com.mojang.authlib.GameProfile fillProfileProperties(com.mojang.authlib.GameProfile,boolean) -> fillProfileProperties
    72:101:java.util.Map getTextures(com.mojang.authlib.GameProfile,boolean) -> getTextures
    106:119:com.mojang.authlib.GameProfile hasJoinedServer(com.mojang.authlib.GameProfile,java.lang.String) -> hasJoinedServer
    124:124:com.mojang.authlib.GameProfile hasJoinedServer(com.mojang.authlib.GameProfile,java.lang.String,java.net.InetAddress) -> hasJoinedServer
    129:149:void joinServer(com.mojang.authlib.GameProfile,java.lang.String,java.lang.String) -> joinServer
    152:169:void fillTextureProperties(com.mojang.authlib.GameProfile,launcher.client.PlayerProfile) -> fillTextureProperties
    172:174:com.mojang.authlib.GameProfile toGameProfile(launcher.client.PlayerProfile) -> toGameProfile
    181:203:void getTexturesMojang(java.util.Map,java.lang.String,com.mojang.authlib.GameProfile) -> getTexturesMojang
    32:33:void <clinit>() -> <clinit>
com.mojang.util.QueueLogAppender -> com.mojang.util.QueueLogAppender:
    int MAX_CAPACITY -> MAX_CAPACITY
    java.util.Map QUEUES -> QUEUES
    java.util.concurrent.locks.ReadWriteLock QUEUE_LOCK -> QUEUE_LOCK
    java.util.concurrent.BlockingQueue queue -> queue
    30:32:void <init>(java.lang.String,org.apache.logging.log4j.core.Filter,org.apache.logging.log4j.core.Layout,boolean,java.util.concurrent.BlockingQueue) -> <init>
    36:40:void append(org.apache.logging.log4j.core.LogEvent) -> append
    44:67:com.mojang.util.QueueLogAppender createAppender(java.lang.String,java.lang.String,org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.Filter,java.lang.String) -> createAppender
    71:82:java.lang.String getNextLogEvent(java.lang.String) -> getNextLogEvent
    24:25:void <clinit>() -> <clinit>
com.mojang.util.UUIDTypeAdapter -> com.mojang.util.UUIDTypeAdapter:
    10:10:void <init>() -> <init>
    13:14:void write(com.google.gson.stream.JsonWriter,java.util.UUID) -> write
    18:18:java.util.UUID read(com.google.gson.stream.JsonReader) -> read
    22:22:java.lang.String fromUUID(java.util.UUID) -> fromUUID
    26:26:java.util.UUID fromString(java.lang.String) -> fromString
    10:10:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    10:10:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
launcher.AvanguardStarter -> launcher.REnOc6Ki3M:
    7:7:void <init>() -> <init>
    9:21:void main(java.lang.String[]) -> main
    10:12:boolean lambda$main$0(int) -> REnOc6Ki3M
launcher.AvanguardStarter$SecurityThread -> launcher.CxM7zIuYhO:
    22:22:void <init>() -> <init>
    28:43:void run() -> run
launcher.Launcher -> launcher.Z8CBapOaom:
    java.util.concurrent.atomic.AtomicReference CONFIG -> REnOc6Ki3M
    java.lang.String VERSION -> VERSION
    java.lang.String BUILD -> BUILD
    int PROTOCOL_MAGIC -> PROTOCOL_MAGIC
    java.lang.String RUNTIME_DIR -> RUNTIME_DIR
    java.lang.String CONFIG_FILE -> CONFIG_FILE
    java.lang.String INIT_SCRIPT_FILE -> INIT_SCRIPT_FILE
    java.util.regex.Pattern UUID_PATTERN -> REnOc6Ki3M
    14:14:void <init>() -> <init>
    32:32:java.lang.String toHash(java.util.UUID) -> toHash
    36:36:java.lang.String jvmProperty(java.lang.String,java.lang.String) -> jvmProperty
    40:49:launcher.LauncherConfig getConfig() -> getConfig
    54:67:java.net.URL getResourceURL(java.lang.String) -> getResourceURL
    73:73:java.lang.String getVersion() -> getVersion
    78:80:java.lang.String readBuildNumber() -> REnOc6Ki3M
    15:27:void <clinit>() -> <clinit>
launcher.LauncherAPI -> launcher.LI3Bzun3i2:
launcher.LauncherAgent -> launcher.rmNwuGHNBo:
    java.lang.instrument.Instrumentation inst -> inst
    8:8:void <init>() -> <init>
    11:13:void premain(java.lang.String,java.lang.instrument.Instrumentation) -> premain
    15:17:void addJVMClassPath(java.lang.String) -> addJVMClassPath
launcher.LauncherClassLoader -> launcher.Ol5j4AUN0M:
    29:30:void <init>(java.net.URL[],java.lang.ClassLoader) -> <init>
    53:54:void <init>(java.net.URL[]) -> <init>
    58:59:void addURL(java.net.URL) -> addURL
launcher.LauncherConfig -> launcher.mgXgJr6phP:
    java.lang.String ADDRESS_OVERRIDE_PROPERTY -> ADDRESS_OVERRIDE_PROPERTY
    java.lang.String ADDRESS_OVERRIDE -> ADDRESS_OVERRIDE
    java.net.InetSocketAddress address -> address
    java.security.interfaces.RSAPublicKey publicKey -> publicKey
    java.util.Map runtime -> runtime
    27:31:void <init>(java.lang.String,int,java.security.interfaces.RSAPublicKey,java.util.Map) -> <init>
    34:55:void <init>(launcher.serialize.HInput) -> <init>
    59:70:void write(launcher.serialize.HOutput) -> write
    18:18:void <clinit>() -> <clinit>
launcher.LauncherEngine -> launcher.D5BTZ0MHrC:
    java.util.concurrent.atomic.AtomicBoolean started -> REnOc6Ki3M
    javax.script.ScriptEngine engine -> REnOc6Ki3M
    44:50:void <init>() -> <init>
    53:59:void setScriptBindings() -> REnOc6Ki3M
    63:66:java.lang.Object loadScript(java.net.URL) -> loadScript
    70:83:void main(java.lang.String[]) -> main
    87:96:void start(java.lang.String[]) -> start
    100:170:void addLauncherClassBindings(java.util.Map) -> addLauncherClassBindings
launcher.client.ClientLauncher -> launcher.w42vVwSrSW:
    java.lang.String[] EMPTY_ARRAY -> REnOc6Ki3M
    java.lang.String MAGICAL_INTEL_OPTION -> REnOc6Ki3M
    java.util.Set BIN_POSIX_PERMISSIONS -> REnOc6Ki3M
    java.nio.file.Path NATIVES_DIR -> REnOc6Ki3M
    java.nio.file.Path RESOURCEPACKS_DIR -> CxM7zIuYhO
    launcher.LauncherClassLoader classLoader -> REnOc6Ki3M
    java.lang.String SKIN_URL_PROPERTY -> SKIN_URL_PROPERTY
    java.lang.String SKIN_DIGEST_PROPERTY -> SKIN_DIGEST_PROPERTY
    java.lang.String CLOAK_URL_PROPERTY -> CLOAK_URL_PROPERTY
    java.lang.String CLOAK_DIGEST_PROPERTY -> CLOAK_DIGEST_PROPERTY
    java.util.concurrent.atomic.AtomicBoolean LAUNCHED -> REnOc6Ki3M
    63:64:void <init>() -> <init>
    68:68:boolean isLaunched() -> isLaunched
    76:136:java.lang.Process launch(launcher.hasher.HashedDir,launcher.hasher.HashedDir,launcher.client.ClientProfile,launcher.client.ClientLauncher$Params,boolean) -> launch
    141:209:void main(java.lang.String[]) -> main
    213:222:void verifyHDir(java.nio.file.Path,launcher.hasher.HashedDir,launcher.hasher.FileNameMatcher,boolean) -> verifyHDir
    225:279:void addClientArgs(java.util.Collection,launcher.client.ClientProfile,launcher.client.ClientLauncher$Params) -> REnOc6Ki3M
    282:289:void addClientLegacyArgs(java.util.Collection,launcher.client.ClientProfile,launcher.client.ClientLauncher$Params) -> CxM7zIuYhO
    296:312:void launch(launcher.client.ClientProfile,launcher.client.ClientLauncher$Params) -> REnOc6Ki3M
    315:324:java.net.URL[] resolveClassPath(java.nio.file.Path,java.lang.String[]) -> REnOc6Ki3M
    327:336:java.util.LinkedList resolveClassPathList(java.nio.file.Path,java.lang.String[]) -> REnOc6Ki3M
    324:324:java.net.URL[] lambda$resolveClassPath$1(int) -> REnOc6Ki3M
    149:149:boolean lambda$main$0(int) -> REnOc6Ki3M
    41:61:void <clinit>() -> <clinit>
launcher.client.ClientLauncher$1 -> launcher.rA2YLHiJR:
launcher.client.ClientLauncher$ClassPathFileVisitor -> launcher.kQfBjd7UO0:
    java.util.Collection result -> REnOc6Ki3M
    409:411:void <init>(java.util.Collection) -> <init>
    415:418:java.nio.file.FileVisitResult visitFile(java.nio.file.Path,java.nio.file.attribute.BasicFileAttributes) -> REnOc6Ki3M
    406:406:java.nio.file.FileVisitResult visitFile(java.lang.Object,java.nio.file.attribute.BasicFileAttributes) -> visitFile
    406:406:void <init>(java.util.Collection,launcher.client.ClientLauncher$1) -> <init>
launcher.client.ClientLauncher$Params -> launcher.XFK1HTUklp:
    java.nio.file.Path assetDir -> assetDir
    java.nio.file.Path clientDir -> clientDir
    launcher.client.PlayerProfile pp -> pp
    java.lang.String accessToken -> accessToken
    boolean autoEnter -> autoEnter
    boolean fullScreen -> fullScreen
    int ram -> ram
    int width -> width
    int height -> height
    355:369:void <init>(java.nio.file.Path,java.nio.file.Path,launcher.client.PlayerProfile,java.lang.String,boolean,boolean,int,int,int) -> <init>
    372:386:void <init>(launcher.serialize.HInput) -> <init>
    392:403:void write(launcher.serialize.HOutput) -> write
launcher.client.ClientProfile -> launcher.IBvy0uQmfK:
    launcher.serialize.stream.StreamObject$Adapter RO_ADAPTER -> RO_ADAPTER
    launcher.hasher.FileNameMatcher ASSET_MATCHER -> REnOc6Ki3M
    launcher.serialize.config.entry.StringConfigEntry version -> REnOc6Ki3M
    launcher.serialize.config.entry.StringConfigEntry assetIndex -> CxM7zIuYhO
    launcher.serialize.config.entry.IntegerConfigEntry sortIndex -> REnOc6Ki3M
    launcher.serialize.config.entry.StringConfigEntry title -> Z8CBapOaom
    launcher.serialize.config.entry.StringConfigEntry serverAddress -> LI3Bzun3i2
    launcher.serialize.config.entry.IntegerConfigEntry serverPort -> CxM7zIuYhO
    launcher.serialize.config.entry.ListConfigEntry update -> REnOc6Ki3M
    launcher.serialize.config.entry.ListConfigEntry updateExclusions -> CxM7zIuYhO
    launcher.serialize.config.entry.ListConfigEntry updateVerify -> Z8CBapOaom
    launcher.serialize.config.entry.BooleanConfigEntry updateFastCheck -> REnOc6Ki3M
    launcher.serialize.config.entry.StringConfigEntry mainClass -> rmNwuGHNBo
    launcher.serialize.config.entry.ListConfigEntry jvmArgs -> LI3Bzun3i2
    launcher.serialize.config.entry.ListConfigEntry classPath -> rmNwuGHNBo
    launcher.serialize.config.entry.ListConfigEntry clientArgs -> Ol5j4AUN0M
    53:76:void <init>(launcher.serialize.config.entry.BlockConfigEntry) -> <init>
    80:81:void <init>(launcher.serialize.HInput,boolean) -> <init>
    85:85:int compareTo(launcher.client.ClientProfile) -> REnOc6Ki3M
    90:90:java.lang.String toString() -> toString
    95:95:java.lang.String getAssetIndex() -> getAssetIndex
    100:100:launcher.hasher.FileNameMatcher getAssetUpdateMatcher() -> getAssetUpdateMatcher
    105:105:java.lang.String[] getClassPath() -> getClassPath
    110:110:java.lang.String[] getClientArgs() -> getClientArgs
    115:118:launcher.hasher.FileNameMatcher getClientUpdateMatcher() -> getClientUpdateMatcher
    123:123:java.lang.String[] getJvmArgs() -> getJvmArgs
    128:128:java.lang.String getMainClass() -> getMainClass
    133:133:java.lang.String getServerAddress() -> getServerAddress
    138:138:int getServerPort() -> getServerPort
    143:143:java.net.InetSocketAddress getServerSocketAddress() -> getServerSocketAddress
    148:148:int getSortIndex() -> getSortIndex
    153:153:java.lang.String getTitle() -> getTitle
    158:159:void setTitle(java.lang.String) -> setTitle
    163:163:launcher.client.ClientProfile$Version getVersion() -> getVersion
    168:169:void setVersion(launcher.client.ClientProfile$Version) -> setVersion
    173:173:boolean isUpdateFastCheck() -> isUpdateFastCheck
    179:197:void verify() -> verify
    22:22:int compareTo(java.lang.Object) -> compareTo
    123:123:java.lang.String[] lambda$getJvmArgs$6(int) -> REnOc6Ki3M
    117:117:java.lang.String[] lambda$getClientUpdateMatcher$5(int) -> CxM7zIuYhO
    116:116:java.lang.String[] lambda$getClientUpdateMatcher$4(int) -> Z8CBapOaom
    115:115:java.lang.String[] lambda$getClientUpdateMatcher$3(int) -> LI3Bzun3i2
    110:110:java.lang.String[] lambda$getClientArgs$2(int) -> rmNwuGHNBo
    105:105:java.lang.String[] lambda$getClassPath$1(int) -> Ol5j4AUN0M
    25:25:launcher.client.ClientProfile lambda$static$0(launcher.serialize.HInput) -> REnOc6Ki3M
    25:26:void <clinit>() -> <clinit>
launcher.client.ClientProfile$Version -> launcher.RiO8uEzTKq:
    launcher.client.ClientProfile$Version MC147 -> MC147
    launcher.client.ClientProfile$Version MC152 -> MC152
    launcher.client.ClientProfile$Version MC164 -> MC164
    launcher.client.ClientProfile$Version MC172 -> MC172
    launcher.client.ClientProfile$Version MC1710 -> MC1710
    launcher.client.ClientProfile$Version MC189 -> MC189
    launcher.client.ClientProfile$Version MC194 -> MC194
    launcher.client.ClientProfile$Version MC1102 -> MC1102
    launcher.client.ClientProfile$Version MC1112 -> MC1112
    launcher.client.ClientProfile$Version MC1122 -> MC1122
    java.util.Map VERSIONS -> VERSIONS
    java.lang.String name -> name
    int protocol -> protocol
    launcher.client.ClientProfile$Version[] $VALUES -> $VALUES
    199:199:launcher.client.ClientProfile$Version[] values() -> values
    199:199:launcher.client.ClientProfile$Version valueOf(java.lang.String) -> valueOf
    215:218:void <init>(java.lang.String,int,java.lang.String,int) -> <init>
    222:222:java.lang.String toString() -> toString
    226:226:launcher.client.ClientProfile$Version byName(java.lang.String) -> byName
    199:235:void <clinit>() -> <clinit>
launcher.client.JSApplication -> launcher.gOu53PXZF:
    java.util.concurrent.atomic.AtomicReference INSTANCE -> INSTANCE
    13:15:void <init>() -> <init>
    18:18:launcher.client.JSApplication getInstance() -> getInstance
    10:10:void <clinit>() -> <clinit>
launcher.client.PlayerProfile -> launcher.BB1SgPQwBb:
    java.util.UUID uuid -> uuid
    java.lang.String username -> username
    launcher.client.Texture skin -> skin
    launcher.client.Texture cloak -> cloak
    20:25:void <init>(launcher.serialize.HInput) -> <init>
    28:33:void <init>(java.util.UUID,java.lang.String,launcher.client.Texture,launcher.client.Texture) -> <init>
    37:49:void write(launcher.serialize.HOutput) -> write
    53:53:launcher.client.PlayerProfile newOfflineProfile(java.lang.String) -> newOfflineProfile
    58:58:java.util.UUID offlineUUID(java.lang.String) -> offlineUUID
launcher.client.ServerPinger -> launcher.sZ4OdL5EE:
    java.lang.String LEGACY_PING_HOST_MAGIC -> REnOc6Ki3M
    java.lang.String LEGACY_PING_HOST_CHANNEL -> CxM7zIuYhO
    java.util.regex.Pattern LEGACY_PING_HOST_DELIMETER -> REnOc6Ki3M
    int PACKET_LENGTH -> REnOc6Ki3M
    java.net.InetSocketAddress address -> REnOc6Ki3M
    launcher.client.ClientProfile$Version version -> REnOc6Ki3M
    java.lang.Object cacheLock -> REnOc6Ki3M
    launcher.client.ServerPinger$Result cache -> REnOc6Ki3M
    java.lang.Exception cacheException -> REnOc6Ki3M
    java.time.Instant cacheTime -> REnOc6Ki3M
    35:44:void <init>(java.net.InetSocketAddress,launcher.client.ClientProfile$Version) -> <init>
    48:76:launcher.client.ServerPinger$Result ping() -> ping
    80:86:launcher.client.ServerPinger$Result doPing() -> REnOc6Ki3M
    90:146:launcher.client.ServerPinger$Result legacyPing(launcher.serialize.HInput,launcher.serialize.HOutput,boolean) -> REnOc6Ki3M
    152:196:launcher.client.ServerPinger$Result modernPing(launcher.serialize.HInput,launcher.serialize.HOutput) -> REnOc6Ki3M
    200:202:java.lang.String readUTF16String(launcher.serialize.HInput) -> REnOc6Ki3M
    206:208:void writeUTF16String(launcher.serialize.HOutput,java.lang.String) -> REnOc6Ki3M
    27:27:void <clinit>() -> <clinit>
launcher.client.ServerPinger$Result -> launcher.HoqGeyZa1:
    int onlinePlayers -> onlinePlayers
    int maxPlayers -> maxPlayers
    java.lang.String raw -> raw
    215:221:void <init>(int,int,java.lang.String) -> <init>
    225:225:boolean isOverfilled() -> isOverfilled
launcher.client.Texture -> launcher.z0TAohE6IV:
    launcher.helper.SecurityHelper$DigestAlgorithm DIGEST_ALGO -> REnOc6Ki3M
    java.lang.String url -> url
    byte[] digest -> digest
    25:28:void <init>(java.lang.String,byte[]) -> <init>
    31:45:void <init>(java.lang.String,boolean) -> <init>
    48:51:void <init>(launcher.serialize.HInput) -> <init>
    55:57:void write(launcher.serialize.HOutput) -> write
    17:17:void <clinit>() -> <clinit>
launcher.hasher.DirWatcher -> launcher.WKi8Yuft3R:
    boolean FILE_TREE_SUPPORTED -> REnOc6Ki3M
    java.nio.file.WatchEvent$Kind[] KINDS -> REnOc6Ki3M
    java.nio.file.Path dir -> REnOc6Ki3M
    launcher.hasher.HashedDir hdir -> REnOc6Ki3M
    launcher.hasher.FileNameMatcher matcher -> REnOc6Ki3M
    java.nio.file.WatchService service -> REnOc6Ki3M
    boolean digest -> CxM7zIuYhO
    42:52:void <init>(java.nio.file.Path,launcher.hasher.HashedDir,launcher.hasher.FileNameMatcher,boolean) -> <init>
    57:58:void close() -> close
    64:70:void run() -> run
    73:103:void processKey(java.nio.file.WatchKey) -> REnOc6Ki3M
    106:109:void processLoop() -> REnOc6Ki3M
    112:113:void handleError(java.lang.Throwable) -> REnOc6Ki3M
    116:120:java.util.Deque toPath(java.lang.Iterable) -> REnOc6Ki3M
    25:25:java.nio.file.Path access$100(launcher.hasher.DirWatcher) -> REnOc6Ki3M
    25:25:java.nio.file.WatchService access$200(launcher.hasher.DirWatcher) -> REnOc6Ki3M
    25:25:java.nio.file.WatchEvent$Kind[] access$300() -> REnOc6Ki3M
    25:25:launcher.hasher.FileNameMatcher access$400(launcher.hasher.DirWatcher) -> REnOc6Ki3M
    27:30:void <clinit>() -> <clinit>
launcher.hasher.DirWatcher$1 -> launcher.s2vcyiX6Sa:
launcher.hasher.DirWatcher$RegisterFileVisitor -> launcher.kjdeWgIYBJ:
    java.util.Deque path -> REnOc6Ki3M
    launcher.hasher.DirWatcher this$0 -> REnOc6Ki3M
    123:124:void <init>(launcher.hasher.DirWatcher) -> <init>
    128:132:java.nio.file.FileVisitResult postVisitDirectory(java.nio.file.Path,java.io.IOException) -> REnOc6Ki3M
    137:154:java.nio.file.FileVisitResult preVisitDirectory(java.nio.file.Path,java.nio.file.attribute.BasicFileAttributes) -> REnOc6Ki3M
    123:123:java.nio.file.FileVisitResult postVisitDirectory(java.lang.Object,java.io.IOException) -> postVisitDirectory
    123:123:java.nio.file.FileVisitResult preVisitDirectory(java.lang.Object,java.nio.file.attribute.BasicFileAttributes) -> preVisitDirectory
    123:123:void <init>(launcher.hasher.DirWatcher,launcher.hasher.DirWatcher$1) -> <init>
launcher.hasher.FileNameMatcher -> launcher.PDPDio3ID3:
    java.lang.String[] NO_ENTRIES -> REnOc6Ki3M
    java.lang.String[] update -> CxM7zIuYhO
    java.lang.String[] verify -> Z8CBapOaom
    java.lang.String[] exclusions -> LI3Bzun3i2
    17:21:void <init>(java.lang.String[],java.lang.String[],java.lang.String[]) -> <init>
    25:25:boolean shouldUpdate(java.util.Collection) -> shouldUpdate
    30:30:boolean shouldVerify(java.util.Collection) -> shouldVerify
    35:35:launcher.hasher.FileNameMatcher verifyOnly() -> verifyOnly
    39:39:boolean anyMatch(java.lang.String[],java.util.Collection) -> REnOc6Ki3M
    39:39:boolean lambda$anyMatch$1(java.lang.String[],java.lang.String) -> REnOc6Ki3M
    39:39:boolean lambda$null$0(java.lang.String,java.lang.String) -> REnOc6Ki3M
    9:9:void <clinit>() -> <clinit>
launcher.hasher.HashedDir -> launcher.LaAjDbuOjS:
    java.util.Map map -> REnOc6Ki3M
    24:28:void <init>() -> <init>
    24:33:void <init>(java.nio.file.Path,launcher.hasher.FileNameMatcher,boolean,boolean) -> <init>
    24:58:void <init>(launcher.serialize.HInput) -> <init>
    62:62:launcher.hasher.HashedEntry$Type getType() -> getType
    67:67:long size() -> size
    72:82:void write(launcher.serialize.HOutput) -> write
    86:88:launcher.hasher.HashedDir$Diff diff(launcher.hasher.HashedDir,launcher.hasher.FileNameMatcher) -> diff
    93:93:launcher.hasher.HashedEntry getEntry(java.lang.String) -> getEntry
    98:98:boolean isEmpty() -> isEmpty
    103:103:java.util.Map map() -> map
    108:116:launcher.hasher.HashedEntry resolve(java.lang.Iterable) -> resolve
    120:171:launcher.hasher.HashedDir sideDiff(launcher.hasher.HashedDir,launcher.hasher.FileNameMatcher,java.util.Deque,boolean) -> REnOc6Ki3M
    23:23:java.util.Map access$200(launcher.hasher.HashedDir) -> REnOc6Ki3M
launcher.hasher.HashedDir$1 -> launcher.ZrYrXARkvx:
    int[] $SwitchMap$launcher$hasher$HashedEntry$Type -> REnOc6Ki3M
    44:44:void <clinit>() -> <clinit>
launcher.hasher.HashedDir$Diff -> launcher.rnsfNcdWBl:
    launcher.hasher.HashedDir mismatch -> mismatch
    launcher.hasher.HashedDir extra -> extra
    249:252:void <init>(launcher.hasher.HashedDir,launcher.hasher.HashedDir) -> <init>
    256:256:boolean isSame() -> isSame
    245:245:void <init>(launcher.hasher.HashedDir,launcher.hasher.HashedDir,launcher.hasher.HashedDir$1) -> <init>
launcher.hasher.HashedDir$HashFileVisitor -> launcher.fwtpdoNCjX:
    java.nio.file.Path dir -> REnOc6Ki3M
    launcher.hasher.FileNameMatcher matcher -> REnOc6Ki3M
    boolean allowSymlinks -> REnOc6Ki3M
    boolean digest -> CxM7zIuYhO
    launcher.hasher.HashedDir current -> CxM7zIuYhO
    java.util.Deque path -> REnOc6Ki3M
    java.util.Deque stack -> CxM7zIuYhO
    launcher.hasher.HashedDir this$0 -> REnOc6Ki3M
    181:190:void <init>(launcher.hasher.HashedDir,java.nio.file.Path,launcher.hasher.FileNameMatcher,boolean,boolean) -> <init>
    194:205:java.nio.file.FileVisitResult postVisitDirectory(java.nio.file.Path,java.io.IOException) -> REnOc6Ki3M
    210:227:java.nio.file.FileVisitResult preVisitDirectory(java.nio.file.Path,java.nio.file.attribute.BasicFileAttributes) -> REnOc6Ki3M
    233:241:java.nio.file.FileVisitResult visitFile(java.nio.file.Path,java.nio.file.attribute.BasicFileAttributes) -> CxM7zIuYhO
    174:174:java.nio.file.FileVisitResult postVisitDirectory(java.lang.Object,java.io.IOException) -> postVisitDirectory
    174:174:java.nio.file.FileVisitResult visitFile(java.lang.Object,java.nio.file.attribute.BasicFileAttributes) -> visitFile
    174:174:java.nio.file.FileVisitResult preVisitDirectory(java.lang.Object,java.nio.file.attribute.BasicFileAttributes) -> preVisitDirectory
    174:174:void <init>(launcher.hasher.HashedDir,java.nio.file.Path,launcher.hasher.FileNameMatcher,boolean,boolean,launcher.hasher.HashedDir$1) -> <init>
launcher.hasher.HashedEntry -> launcher.n9sGGI9EyR:
    boolean flag -> flag
    11:11:void <init>() -> <init>
    launcher.hasher.HashedEntry$Type getType() -> getType
    long size() -> size
launcher.hasher.HashedEntry$Type -> launcher.aAS5vq4AvM:
    launcher.hasher.HashedEntry$Type DIR -> DIR
    launcher.hasher.HashedEntry$Type FILE -> FILE
    launcher.serialize.stream.EnumSerializer SERIALIZER -> SERIALIZER
    int n -> n
    launcher.hasher.HashedEntry$Type[] $VALUES -> $VALUES
    20:20:launcher.hasher.HashedEntry$Type[] values() -> values
    20:20:launcher.hasher.HashedEntry$Type valueOf(java.lang.String) -> valueOf
    26:28:void <init>(java.lang.String,int,int) -> <init>
    32:32:int getNumber() -> getNumber
    36:36:launcher.hasher.HashedEntry$Type read(launcher.serialize.HInput) -> read
    20:23:void <clinit>() -> <clinit>
launcher.hasher.HashedFile -> launcher.XIfYCt8ATo:
    launcher.helper.SecurityHelper$DigestAlgorithm DIGEST_ALGO -> REnOc6Ki3M
    long size -> size
    byte[] digest -> REnOc6Ki3M
    23:26:void <init>(long,byte[]) -> <init>
    30:31:void <init>(java.nio.file.Path,long,boolean) -> <init>
    35:36:void <init>(launcher.serialize.HInput) -> <init>
    40:40:launcher.hasher.HashedEntry$Type getType() -> getType
    45:45:long size() -> size
    50:55:void write(launcher.serialize.HOutput) -> write
    59:59:boolean isSame(launcher.hasher.HashedFile) -> isSame
    64:73:boolean isSame(java.nio.file.Path,boolean) -> isSame
    78:78:boolean isSameDigest(byte[]) -> isSameDigest
    16:16:void <clinit>() -> <clinit>
launcher.helper.CommonHelper -> launcher.rhmeQGXuZu:
    java.lang.String[] SCRIPT_ENGINE_ARGS -> REnOc6Ki3M
    12:13:void <init>() -> <init>
    17:17:java.lang.String low(java.lang.String) -> low
    22:22:javax.script.ScriptEngine newScriptEngine() -> newScriptEngine
    27:32:java.lang.Thread newThread(java.lang.String,boolean,java.lang.Runnable) -> newThread
    37:40:java.lang.String replace(java.lang.String,java.lang.String[]) -> replace
    10:10:void <clinit>() -> <clinit>
launcher.helper.IOHelper -> launcher.tdIf9vy9e:
    java.nio.charset.Charset UNICODE_CHARSET -> UNICODE_CHARSET
    java.nio.charset.Charset ASCII_CHARSET -> ASCII_CHARSET
    launcher.ssl.LauncherSSLContext sslContext -> REnOc6Ki3M
    int SOCKET_TIMEOUT -> SOCKET_TIMEOUT
    int HTTP_TIMEOUT -> HTTP_TIMEOUT
    int BUFFER_SIZE -> BUFFER_SIZE
    java.lang.String CROSS_SEPARATOR -> CROSS_SEPARATOR
    java.nio.file.FileSystem FS -> FS
    java.lang.String PLATFORM_SEPARATOR -> PLATFORM_SEPARATOR
    boolean POSIX -> POSIX
    java.nio.file.Path JVM_DIR -> JVM_DIR
    java.nio.file.Path HOME_DIR -> HOME_DIR
    java.nio.file.Path WORKING_DIR -> WORKING_DIR
    java.nio.file.OpenOption[] READ_OPTIONS -> REnOc6Ki3M
    java.nio.file.OpenOption[] WRITE_OPTIONS -> CxM7zIuYhO
    java.nio.file.OpenOption[] APPEND_OPTIONS -> Z8CBapOaom
    java.nio.file.LinkOption[] LINK_OPTIONS -> REnOc6Ki3M
    java.nio.file.CopyOption[] COPY_OPTIONS -> REnOc6Ki3M
    java.util.Set WALK_OPTIONS -> REnOc6Ki3M
    java.util.regex.Pattern CROSS_SEPARATOR_PATTERN -> REnOc6Ki3M
    java.util.regex.Pattern PLATFORM_SEPARATOR_PATTERN -> CxM7zIuYhO
    120:121:void <init>() -> <init>
    126:130:void close(java.lang.AutoCloseable) -> close
    134:136:void copy(java.nio.file.Path,java.nio.file.Path) -> copy
    140:144:void createParentDirs(java.nio.file.Path) -> createParentDirs
    148:148:java.lang.String decode(byte[]) -> decode
    153:153:java.lang.String decodeASCII(byte[]) -> decodeASCII
    158:159:void deleteDir(java.nio.file.Path,boolean) -> deleteDir
    163:163:byte[] encode(java.lang.String) -> encode
    168:168:byte[] encodeASCII(java.lang.String) -> encodeASCII
    173:173:boolean exists(java.nio.file.Path) -> exists
    178:178:java.nio.file.Path getCodeSource(java.lang.Class) -> getCodeSource
    183:183:java.lang.String getFileName(java.nio.file.Path) -> getFileName
    188:188:java.lang.String getIP(java.net.SocketAddress) -> getIP
    193:193:byte[] getResourceBytes(java.lang.String) -> getResourceBytes
    198:202:java.net.URL getResourceURL(java.lang.String) -> getResourceURL
    207:207:boolean hasExtension(java.nio.file.Path,java.lang.String) -> hasExtension
    212:212:boolean isDir(java.nio.file.Path) -> isDir
    217:219:boolean isEmpty(java.nio.file.Path) -> isEmpty
    224:224:boolean isFile(java.nio.file.Path) -> isFile
    229:230:boolean isValidFileName(java.lang.String) -> isValidFileName
    236:239:boolean isValidPath(java.lang.String) -> isValidPath
    245:245:boolean isValidTextureBounds(int,int,boolean) -> isValidTextureBounds
    251:253:void move(java.nio.file.Path,java.nio.file.Path) -> move
    257:257:byte[] newBuffer() -> newBuffer
    262:262:java.io.ByteArrayOutputStream newByteArrayOutput() -> newByteArrayOutput
    267:267:char[] newCharBuffer() -> newCharBuffer
    272:282:java.net.URLConnection newConnection(java.net.URL) -> newConnection
    287:290:java.net.HttpURLConnection newConnectionPost(java.net.URL) -> newConnectionPost
    295:297:java.util.zip.Deflater newDeflater() -> newDeflater
    302:302:java.util.zip.Inflater newInflater() -> newInflater
    307:307:java.io.InputStream newInput(java.net.URL) -> newInput
    312:312:java.io.InputStream newInput(java.nio.file.Path) -> newInput
    317:317:java.io.OutputStream newOutput(java.nio.file.Path) -> newOutput
    322:323:java.io.OutputStream newOutput(java.nio.file.Path,boolean) -> newOutput
    328:328:java.io.BufferedReader newReader(java.io.InputStream) -> newReader
    333:333:java.io.BufferedReader newReader(java.io.InputStream,java.nio.charset.Charset) -> newReader
    338:340:java.io.BufferedReader newReader(java.net.URL) -> newReader
    345:345:java.io.BufferedReader newReader(java.nio.file.Path) -> newReader
    350:353:javax.net.ssl.SSLSocket newSSLSocket(java.net.InetSocketAddress) -> newSSLSocket
    358:360:java.net.Socket newSocket() -> newSocket
    365:365:java.io.BufferedWriter newWriter(java.io.OutputStream) -> newWriter
    370:370:java.io.BufferedWriter newWriter(java.nio.file.Path) -> newWriter
    375:376:java.io.BufferedWriter newWriter(java.nio.file.Path,boolean) -> newWriter
    381:381:java.io.BufferedWriter newWriter(java.io.FileDescriptor) -> newWriter
    386:388:java.util.zip.ZipEntry newZipEntry(java.lang.String) -> newZipEntry
    393:393:java.util.zip.ZipEntry newZipEntry(java.util.zip.ZipEntry) -> newZipEntry
    398:398:java.util.zip.ZipInputStream newZipInput(java.io.InputStream) -> newZipInput
    403:403:java.util.zip.ZipInputStream newZipInput(java.net.URL) -> newZipInput
    408:408:java.util.zip.ZipInputStream newZipInput(java.nio.file.Path) -> newZipInput
    413:425:byte[] read(java.nio.file.Path) -> read
    430:432:byte[] read(java.net.URL) -> read
    437:445:void read(java.io.InputStream,byte[]) -> read
    449:452:byte[] read(java.io.InputStream) -> read
    457:457:java.nio.file.attribute.BasicFileAttributes readAttributes(java.nio.file.Path) -> readAttributes
    462:477:java.awt.image.BufferedImage readTexture(java.lang.Object,boolean) -> readTexture
    482:482:java.lang.String request(java.net.URL) -> request
    487:490:java.net.InetSocketAddress resolve(java.net.InetSocketAddress) -> resolve
    495:508:java.nio.file.Path resolveIncremental(java.nio.file.Path,java.lang.String,java.lang.String) -> resolveIncremental
    515:538:java.nio.file.Path resolveJavaBin(java.nio.file.Path) -> resolveJavaBin
    544:555:void setSocketFlags(java.net.Socket) -> setSocketFlags
    559:559:java.nio.file.Path toPath(java.lang.String) -> toPath
    564:564:java.lang.String toString(java.nio.file.Path) -> toString
    570:572:java.net.URI toURI(java.net.URL) -> toURI
    579:581:java.net.URL toURL(java.nio.file.Path) -> toURL
    587:593:int transfer(java.io.InputStream,java.io.OutputStream) -> transfer
    598:601:void transfer(java.nio.file.Path,java.io.OutputStream) -> transfer
    605:605:int transfer(java.io.InputStream,java.nio.file.Path) -> transfer
    610:612:int transfer(java.io.InputStream,java.nio.file.Path,boolean) -> transfer
    618:620:java.lang.String urlDecode(java.lang.String) -> urlDecode
    627:629:java.lang.String urlEncode(java.lang.String) -> urlEncode
    635:635:java.lang.String verifyFileName(java.lang.String) -> verifyFileName
    640:643:int verifyLength(int,int) -> verifyLength
    648:649:java.awt.image.BufferedImage verifyTexture(java.awt.image.BufferedImage,boolean) -> verifyTexture
    655:658:java.lang.String verifyURL(java.lang.String) -> verifyURL
    664:665:void walk(java.nio.file.Path,java.nio.file.FileVisitor,boolean) -> walk
    669:671:void write(java.nio.file.Path,byte[]) -> write
    729:731:java.net.URL convertToURL(java.lang.String) -> convertToURL
    648:648:boolean lambda$verifyTexture$1(boolean,java.awt.image.BufferedImage) -> REnOc6Ki3M
    230:230:boolean lambda$isValidFileName$0(int) -> REnOc6Ki3M
    70:118:void <clinit>() -> <clinit>
launcher.helper.IOHelper$1 -> launcher.MlmIcRyvX:
launcher.helper.IOHelper$DeleteDirVisitor -> launcher.df1NmneVwo:
    java.nio.file.Path dir -> REnOc6Ki3M
    boolean self -> REnOc6Ki3M
    677:680:void <init>(java.nio.file.Path,boolean) -> <init>
    684:688:java.nio.file.FileVisitResult postVisitDirectory(java.nio.file.Path,java.io.IOException) -> REnOc6Ki3M
    693:694:java.nio.file.FileVisitResult visitFile(java.nio.file.Path,java.nio.file.attribute.BasicFileAttributes) -> REnOc6Ki3M
    673:673:java.nio.file.FileVisitResult postVisitDirectory(java.lang.Object,java.io.IOException) -> postVisitDirectory
    673:673:java.nio.file.FileVisitResult visitFile(java.lang.Object,java.nio.file.attribute.BasicFileAttributes) -> visitFile
    673:673:void <init>(java.nio.file.Path,boolean,launcher.helper.IOHelper$1) -> <init>
launcher.helper.IOHelper$SkipHiddenVisitor -> launcher.hmS5PfHESn:
    java.nio.file.FileVisitor visitor -> REnOc6Ki3M
    701:703:void <init>(java.nio.file.FileVisitor) -> <init>
    707:707:java.nio.file.FileVisitResult postVisitDirectory(java.nio.file.Path,java.io.IOException) -> REnOc6Ki3M
    712:712:java.nio.file.FileVisitResult preVisitDirectory(java.nio.file.Path,java.nio.file.attribute.BasicFileAttributes) -> REnOc6Ki3M
    717:717:java.nio.file.FileVisitResult visitFile(java.nio.file.Path,java.nio.file.attribute.BasicFileAttributes) -> CxM7zIuYhO
    722:722:java.nio.file.FileVisitResult visitFileFailed(java.nio.file.Path,java.io.IOException) -> CxM7zIuYhO
    698:698:java.nio.file.FileVisitResult postVisitDirectory(java.lang.Object,java.io.IOException) -> postVisitDirectory
    698:698:java.nio.file.FileVisitResult visitFileFailed(java.lang.Object,java.io.IOException) -> visitFileFailed
    698:698:java.nio.file.FileVisitResult visitFile(java.lang.Object,java.nio.file.attribute.BasicFileAttributes) -> visitFile
    698:698:java.nio.file.FileVisitResult preVisitDirectory(java.lang.Object,java.nio.file.attribute.BasicFileAttributes) -> preVisitDirectory
    698:698:void <init>(java.nio.file.FileVisitor,launcher.helper.IOHelper$1) -> <init>
launcher.helper.JVMHelper -> launcher.bQCu57YHgR:
    java.lang.management.RuntimeMXBean RUNTIME_MXBEAN -> RUNTIME_MXBEAN
    com.sun.management.OperatingSystemMXBean OPERATING_SYSTEM_MXBEAN -> OPERATING_SYSTEM_MXBEAN
    launcher.helper.JVMHelper$OS OS_TYPE -> OS_TYPE
    java.lang.String OS_VERSION -> OS_VERSION
    int OS_BITS -> OS_BITS
    int JVM_BITS -> JVM_BITS
    int RAM -> RAM
    java.lang.SecurityManager SECURITY_MANAGER -> SECURITY_MANAGER
    java.lang.Runtime RUNTIME -> RUNTIME
    java.lang.ClassLoader LOADER -> LOADER
    35:36:void <init>() -> <init>
    40:40:void addClassPath(java.net.URL) -> addClassPath
    45:45:void addNativePath(java.nio.file.Path) -> addNativePath
    51:54:void fullGC() -> fullGC
    59:59:java.security.cert.Certificate[] getCertificates(java.lang.String) -> getCertificates
    64:64:java.lang.String[] getClassPath() -> getClassPath
    68:81:java.net.URL[] getClassPathURL() -> getClassPathURL
    86:86:boolean isJVMMatchesSystemArch() -> isJVMMatchesSystemArch
    91:104:void verifySystemProperties(java.lang.Class,boolean) -> verifySystemProperties
    109:114:int getCorrectOSArch() -> REnOc6Ki3M
    118:119:int getRAMAmount() -> CxM7zIuYhO
    123:130:java.lang.Class firstClass(java.lang.String[]) -> REnOc6Ki3M
    19:140:void <clinit>() -> <clinit>
launcher.helper.JVMHelper$OS -> launcher.nOmSV2s8vr:
    launcher.helper.JVMHelper$OS MUSTDIE -> MUSTDIE
    launcher.helper.JVMHelper$OS LINUX -> LINUX
    launcher.helper.JVMHelper$OS MACOSX -> MACOSX
    java.lang.String name -> name
    launcher.helper.JVMHelper$OS[] $VALUES -> $VALUES
    141:141:launcher.helper.JVMHelper$OS[] values() -> values
    141:141:launcher.helper.JVMHelper$OS valueOf(java.lang.String) -> valueOf
    147:149:void <init>(java.lang.String,int,java.lang.String) -> <init>
    152:161:launcher.helper.JVMHelper$OS byName(java.lang.String) -> byName
    141:144:void <clinit>() -> <clinit>
launcher.helper.LogHelper -> launcher.jNTAXtj3Ol:
    java.lang.String DEBUG_PROPERTY -> DEBUG_PROPERTY
    java.lang.String NO_JANSI_PROPERTY -> NO_JANSI_PROPERTY
    boolean JANSI -> JANSI
    java.time.format.DateTimeFormatter DATE_TIME_FORMATTER -> REnOc6Ki3M
    java.util.concurrent.atomic.AtomicBoolean DEBUG_ENABLED -> REnOc6Ki3M
    java.util.Set OUTPUTS -> REnOc6Ki3M
    launcher.helper.LogHelper$Output STD_OUTPUT -> REnOc6Ki3M
    37:38:void <init>() -> <init>
    42:43:void addOutput(launcher.helper.LogHelper$Output) -> addOutput
    47:52:void addOutput(java.nio.file.Path) -> addOutput
    56:57:void addOutput(java.io.Writer) -> addOutput
    61:64:void debug(java.lang.String) -> debug
    68:69:void debug(java.lang.String,java.lang.Object[]) -> debug
    73:74:void error(java.lang.Throwable) -> error
    78:79:void error(java.lang.String) -> error
    83:84:void error(java.lang.String,java.lang.Object[]) -> error
    88:89:void info(java.lang.String) -> info
    93:94:void info(java.lang.String,java.lang.Object[]) -> info
    98:98:boolean isDebugEnabled() -> isDebugEnabled
    103:104:void setDebugEnabled(boolean) -> setDebugEnabled
    108:111:void log(launcher.helper.LogHelper$Level,java.lang.String,boolean) -> log
    115:116:void printVersion(java.lang.String) -> printVersion
    120:123:void println(java.lang.String) -> println
    127:127:boolean removeOutput(launcher.helper.LogHelper$Output) -> removeOutput
    132:132:boolean removeStdOutput() -> removeStdOutput
    137:140:void subDebug(java.lang.String) -> subDebug
    144:145:void subDebug(java.lang.String,java.lang.Object[]) -> subDebug
    149:150:void subInfo(java.lang.String) -> subInfo
    154:155:void subInfo(java.lang.String,java.lang.Object[]) -> subInfo
    159:160:void subWarning(java.lang.String) -> subWarning
    164:165:void subWarning(java.lang.String,java.lang.Object[]) -> subWarning
    169:175:java.lang.String toString(java.lang.Throwable) -> toString
    181:182:void warning(java.lang.String) -> warning
    186:187:void warning(java.lang.String,java.lang.Object[]) -> warning
    191:229:java.lang.String ansiFormatLog(launcher.helper.LogHelper$Level,java.lang.String,java.lang.String,boolean) -> REnOc6Ki3M
    233:239:java.lang.String ansiFormatVersion(java.lang.String) -> REnOc6Ki3M
    243:246:java.lang.String formatLog(launcher.helper.LogHelper$Level,java.lang.String,java.lang.String,boolean) -> CxM7zIuYhO
    250:250:java.lang.String formatVersion(java.lang.String) -> CxM7zIuYhO
    32:282:void <clinit>() -> <clinit>
launcher.helper.LogHelper$1 -> launcher.yCr3n9t9t5:
    int[] $SwitchMap$launcher$helper$LogHelper$Level -> REnOc6Ki3M
    192:192:void <clinit>() -> <clinit>
launcher.helper.LogHelper$JAnsiOutput -> launcher.am4uNvdvXo:
    307:308:void <init>(java.io.OutputStream) -> <init>
    305:305:void <init>(java.io.OutputStream,launcher.helper.LogHelper$1) -> <init>
launcher.helper.LogHelper$Level -> launcher.Xhyp7jFtKR:
    launcher.helper.LogHelper$Level DEBUG -> DEBUG
    launcher.helper.LogHelper$Level INFO -> INFO
    launcher.helper.LogHelper$Level WARNING -> WARNING
    launcher.helper.LogHelper$Level ERROR -> ERROR
    java.lang.String name -> name
    launcher.helper.LogHelper$Level[] $VALUES -> $VALUES
    290:290:launcher.helper.LogHelper$Level[] values() -> values
    290:290:launcher.helper.LogHelper$Level valueOf(java.lang.String) -> valueOf
    295:297:void <init>(java.lang.String,int,java.lang.String) -> <init>
    301:301:java.lang.String toString() -> toString
    290:292:void <clinit>() -> <clinit>
launcher.helper.LogHelper$Output -> launcher.hDLcFtZoqD:
    void println(java.lang.String) -> println
launcher.helper.LogHelper$WriterOutput -> launcher.QgoflrxyfK:
    java.io.Writer writer -> REnOc6Ki3M
    314:316:void <init>(java.io.Writer) -> <init>
    320:321:void close() -> close
    326:331:void println(java.lang.String) -> println
    311:311:void <init>(java.io.Writer,launcher.helper.LogHelper$1) -> <init>
launcher.helper.SecurityHelper -> launcher.wQHN1yMowT:
    java.lang.String RSA_ALGO -> RSA_ALGO
    java.lang.String RSA_SIGN_ALGO -> RSA_SIGN_ALGO
    java.lang.String RSA_CIPHER_ALGO -> RSA_CIPHER_ALGO
    int TOKEN_LENGTH -> TOKEN_LENGTH
    int TOKEN_STRING_LENGTH -> TOKEN_STRING_LENGTH
    int RSA_KEY_LENGTH_BITS -> RSA_KEY_LENGTH_BITS
    int RSA_KEY_LENGTH -> RSA_KEY_LENGTH
    int CRYPTO_MAX_LENGTH -> CRYPTO_MAX_LENGTH
    java.lang.String CERTIFICATE_DIGEST -> CERTIFICATE_DIGEST
    java.lang.String HEX -> HEX
    char[] VOWELS -> REnOc6Ki3M
    char[] CONS -> CxM7zIuYhO
    54:55:void <init>() -> <init>
    59:59:byte[] digest(launcher.helper.SecurityHelper$DigestAlgorithm,java.lang.String) -> digest
    64:66:byte[] digest(launcher.helper.SecurityHelper$DigestAlgorithm,java.net.URL) -> digest
    71:73:byte[] digest(launcher.helper.SecurityHelper$DigestAlgorithm,java.nio.file.Path) -> digest
    78:78:byte[] digest(launcher.helper.SecurityHelper$DigestAlgorithm,byte[]) -> digest
    83:88:byte[] digest(launcher.helper.SecurityHelper$DigestAlgorithm,java.io.InputStream) -> digest
    94:98:java.security.KeyPair genRSAKeyPair(java.security.SecureRandom) -> genRSAKeyPair
    104:104:java.security.KeyPair genRSAKeyPair() -> genRSAKeyPair
    110:112:boolean isValidCertificate(java.security.cert.Certificate) -> isValidCertificate
    118:118:boolean isValidCertificates(java.security.cert.Certificate[]) -> isValidCertificates
    123:125:boolean isValidSign(java.nio.file.Path,byte[],java.security.interfaces.RSAPublicKey) -> isValidSign
    130:136:boolean isValidSign(byte[],byte[],java.security.interfaces.RSAPublicKey) -> isValidSign
    141:143:boolean isValidSign(java.io.InputStream,byte[],java.security.interfaces.RSAPublicKey) -> isValidSign
    148:150:boolean isValidSign(java.net.URL,byte[],java.security.interfaces.RSAPublicKey) -> isValidSign
    155:155:boolean isValidToken(java.lang.CharSequence) -> isValidToken
    160:164:java.security.MessageDigest newDigest(launcher.helper.SecurityHelper$DigestAlgorithm) -> newDigest
    170:170:javax.crypto.Cipher newRSADecryptCipher(java.security.interfaces.RSAPrivateKey) -> newRSADecryptCipher
    175:175:javax.crypto.Cipher newRSAEncryptCipher(java.security.interfaces.RSAPublicKey) -> newRSAEncryptCipher
    180:186:java.security.Signature newRSASignSignature(java.security.interfaces.RSAPrivateKey) -> newRSASignSignature
    191:197:java.security.Signature newRSAVerifySignature(java.security.interfaces.RSAPublicKey) -> newRSAVerifySignature
    202:202:java.security.SecureRandom newRandom() -> newRandom
    207:209:byte[] randomBytes(java.util.Random,int) -> randomBytes
    214:214:byte[] randomBytes(int) -> randomBytes
    219:219:java.lang.String randomStringToken(java.util.Random) -> randomStringToken
    224:224:java.lang.String randomStringToken() -> randomStringToken
    229:229:byte[] randomToken(java.util.Random) -> randomToken
    234:234:byte[] randomToken() -> randomToken
    239:296:java.lang.String randomUsername(java.util.Random) -> randomUsername
    301:301:java.lang.String randomUsername() -> randomUsername
    306:311:byte[] sign(java.io.InputStream,java.security.interfaces.RSAPrivateKey) -> sign
    317:322:byte[] sign(byte[],java.security.interfaces.RSAPrivateKey) -> sign
    328:330:byte[] sign(java.nio.file.Path,java.security.interfaces.RSAPrivateKey) -> sign
    335:344:java.lang.String toHex(byte[]) -> toHex
    349:349:java.security.interfaces.RSAPrivateKey toPrivateRSAKey(byte[]) -> toPrivateRSAKey
    354:354:java.security.interfaces.RSAPublicKey toPublicRSAKey(byte[]) -> toPublicRSAKey
    360:360:void verifyCertificates(java.lang.Class) -> verifyCertificates
    364:367:void verifySign(byte[],byte[],java.security.interfaces.RSAPublicKey) -> verifySign
    371:374:void verifySign(java.io.InputStream,byte[],java.security.interfaces.RSAPublicKey) -> verifySign
    378:381:void verifySign(java.nio.file.Path,byte[],java.security.interfaces.RSAPublicKey) -> verifySign
    385:388:void verifySign(java.net.URL,byte[],java.security.interfaces.RSAPublicKey) -> verifySign
    392:392:java.lang.String verifyToken(java.lang.String) -> verifyToken
    398:400:javax.crypto.Cipher newCipher(java.lang.String) -> REnOc6Ki3M
    405:411:javax.crypto.Cipher newRSACipher(int,java.security.interfaces.RSAKey) -> REnOc6Ki3M
    416:418:java.security.KeyFactory newRSAKeyFactory() -> REnOc6Ki3M
    424:426:java.security.Signature newRSASignature() -> REnOc6Ki3M
    431:439:void updateSignature(java.io.InputStream,java.security.Signature) -> REnOc6Ki3M
    160:160:boolean lambda$newDigest$1(launcher.helper.SecurityHelper$DigestAlgorithm) -> REnOc6Ki3M
    155:155:boolean lambda$isValidToken$0(int) -> REnOc6Ki3M
    51:52:void <clinit>() -> <clinit>
launcher.helper.SecurityHelper$DigestAlgorithm -> launcher.A52NfUzeTy:
    launcher.helper.SecurityHelper$DigestAlgorithm PLAIN -> PLAIN
    launcher.helper.SecurityHelper$DigestAlgorithm MD5 -> MD5
    launcher.helper.SecurityHelper$DigestAlgorithm SHA1 -> SHA1
    launcher.helper.SecurityHelper$DigestAlgorithm SHA224 -> SHA224
    launcher.helper.SecurityHelper$DigestAlgorithm SHA256 -> SHA256
    launcher.helper.SecurityHelper$DigestAlgorithm SHA512 -> SHA512
    java.util.Map ALGORITHMS -> ALGORITHMS
    java.lang.String name -> name
    int bits -> bits
    int bytes -> bytes
    launcher.helper.SecurityHelper$DigestAlgorithm[] $VALUES -> $VALUES
    boolean $assertionsDisabled -> $assertionsDisabled
    441:441:launcher.helper.SecurityHelper$DigestAlgorithm[] values() -> values
    441:441:launcher.helper.SecurityHelper$DigestAlgorithm valueOf(java.lang.String) -> valueOf
    451:458:void <init>(java.lang.String,int,java.lang.String,int) -> <init>
    462:462:java.lang.String toString() -> toString
    466:469:byte[] verify(byte[]) -> verify
    473:473:launcher.helper.SecurityHelper$DigestAlgorithm byName(java.lang.String) -> byName
    441:482:void <clinit>() -> <clinit>
launcher.helper.VerifyHelper -> launcher.paPXxJPgW8:
    java.util.function.IntPredicate POSITIVE -> POSITIVE
    java.util.function.IntPredicate NOT_NEGATIVE -> NOT_NEGATIVE
    java.util.function.LongPredicate L_POSITIVE -> L_POSITIVE
    java.util.function.LongPredicate L_NOT_NEGATIVE -> L_NOT_NEGATIVE
    java.util.function.Predicate NOT_EMPTY -> NOT_EMPTY
    java.util.regex.Pattern USERNAME_PATTERN -> USERNAME_PATTERN
    21:22:void <init>() -> <init>
    26:26:java.lang.Object getMapValue(java.util.Map,java.lang.Object,java.lang.String) -> getMapValue
    31:31:boolean isValidIDName(java.lang.String) -> isValidIDName
    36:36:boolean isValidIDNameChar(int) -> isValidIDNameChar
    41:41:boolean isValidUsername(java.lang.CharSequence) -> isValidUsername
    46:47:void putIfAbsent(java.util.Map,java.lang.Object,java.lang.Object,java.lang.String) -> putIfAbsent
    51:51:java.util.function.IntPredicate range(int,int) -> range
    56:59:java.lang.Object verify(java.lang.Object,java.util.function.Predicate,java.lang.String) -> verify
    64:67:double verifyDouble(double,java.util.function.DoublePredicate,java.lang.String) -> verifyDouble
    72:72:java.lang.String verifyIDName(java.lang.String) -> verifyIDName
    77:80:int verifyInt(int,java.util.function.IntPredicate,java.lang.String) -> verifyInt
    85:88:long verifyLong(long,java.util.function.LongPredicate,java.lang.String) -> verifyLong
    93:93:java.lang.String verifyUsername(java.lang.String) -> verifyUsername
    51:51:boolean lambda$range$5(int,int,int) -> REnOc6Ki3M
    18:18:boolean lambda$static$4(java.lang.String) -> REnOc6Ki3M
    17:17:boolean lambda$static$3(long) -> REnOc6Ki3M
    16:16:boolean lambda$static$2(long) -> CxM7zIuYhO
    15:15:boolean lambda$static$1(int) -> REnOc6Ki3M
    14:14:boolean lambda$static$0(int) -> CxM7zIuYhO
    14:19:void <clinit>() -> <clinit>
launcher.request.CustomRequest -> launcher.LfbbBdEahh:
    12:13:void <init>(launcher.LauncherConfig) -> <init>
    17:18:void <init>() -> <init>
    22:22:launcher.request.Request$Type getType() -> getType
    27:31:java.lang.Object requestDo(launcher.serialize.HInput,launcher.serialize.HOutput) -> requestDo
    java.lang.String getName() -> getName
    java.lang.Object requestDoCustom(launcher.serialize.HInput,launcher.serialize.HOutput) -> requestDoCustom
launcher.request.PingRequest -> launcher.i7vGPczWSn:
    byte EXPECTED_BYTE -> EXPECTED_BYTE
    15:16:void <init>(launcher.LauncherConfig) -> <init>
    20:21:void <init>() -> <init>
    25:25:launcher.request.Request$Type getType() -> getType
    30:34:java.lang.Void requestDo(launcher.serialize.HInput,launcher.serialize.HOutput) -> REnOc6Ki3M
    10:10:java.lang.Object requestDo(launcher.serialize.HInput,launcher.serialize.HOutput) -> requestDo
launcher.request.Request -> launcher.pqRxYwKh0F:
    launcher.LauncherConfig config -> config
    java.util.concurrent.atomic.AtomicBoolean started -> REnOc6Ki3M
    22:27:void <init>(launcher.LauncherConfig) -> <init>
    31:32:void <init>() -> <init>
    launcher.request.Request$Type getType() -> getType
    java.lang.Object requestDo(launcher.serialize.HInput,launcher.serialize.HOutput) -> requestDo
    43:56:java.lang.Object request() -> request
    61:65:void readError(launcher.serialize.HInput) -> readError
    69:78:void writeHandshake(launcher.serialize.HInput,launcher.serialize.HOutput) -> REnOc6Ki3M
    82:82:void requestError(java.lang.String) -> requestError
launcher.request.Request$Type -> launcher.FbDseUhV3e:
    launcher.request.Request$Type PING -> PING
    launcher.request.Request$Type LAUNCHER -> LAUNCHER
    launcher.request.Request$Type UPDATE -> UPDATE
    launcher.request.Request$Type UPDATE_LIST -> UPDATE_LIST
    launcher.request.Request$Type AUTH -> AUTH
    launcher.request.Request$Type JOIN_SERVER -> JOIN_SERVER
    launcher.request.Request$Type CHECK_SERVER -> CHECK_SERVER
    launcher.request.Request$Type PROFILE_BY_USERNAME -> PROFILE_BY_USERNAME
    launcher.request.Request$Type PROFILE_BY_UUID -> PROFILE_BY_UUID
    launcher.request.Request$Type BATCH_PROFILE_BY_USERNAME -> BATCH_PROFILE_BY_USERNAME
    launcher.request.Request$Type CUSTOM -> CUSTOM
    launcher.serialize.stream.EnumSerializer SERIALIZER -> SERIALIZER
    int n -> n
    launcher.request.Request$Type[] $VALUES -> $VALUES
    85:85:launcher.request.Request$Type[] values() -> values
    85:85:launcher.request.Request$Type valueOf(java.lang.String) -> valueOf
    95:97:void <init>(java.lang.String,int,int) -> <init>
    101:101:int getNumber() -> getNumber
    106:106:launcher.request.Request$Type read(launcher.serialize.HInput) -> read
    85:92:void <clinit>() -> <clinit>
launcher.request.RequestException -> launcher.rYrF2pyP6:
    long serialVersionUID -> REnOc6Ki3M
    12:13:void <init>(java.lang.String) -> <init>
    17:18:void <init>(java.lang.Throwable) -> <init>
    22:23:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    27:27:java.lang.String toString() -> toString
launcher.request.auth.AuthRequest -> launcher.uzi6zXF7YM:
    java.lang.String login -> REnOc6Ki3M
    byte[] encryptedPassword -> REnOc6Ki3M
    21:24:void <init>(launcher.LauncherConfig,java.lang.String,byte[]) -> <init>
    28:29:void <init>(java.lang.String,byte[]) -> <init>
    33:33:launcher.request.Request$Type getType() -> getType
    38:46:launcher.request.auth.AuthRequest$Result requestDo(launcher.serialize.HInput,launcher.serialize.HOutput) -> REnOc6Ki3M
    15:15:java.lang.Object requestDo(launcher.serialize.HInput,launcher.serialize.HOutput) -> requestDo
launcher.request.auth.AuthRequest$1 -> launcher.JGAz1M8Ydi:
launcher.request.auth.AuthRequest$Result -> launcher.pxlLZzj2l3:
    launcher.client.PlayerProfile pp -> pp
    java.lang.String accessToken -> accessToken
    53:56:void <init>(launcher.client.PlayerProfile,java.lang.String) -> <init>
    49:49:void <init>(launcher.client.PlayerProfile,java.lang.String,launcher.request.auth.AuthRequest$1) -> <init>
launcher.request.auth.CheckServerRequest -> launcher.Cy2OB3P95L:
    java.lang.String username -> REnOc6Ki3M
    java.lang.String serverID -> CxM7zIuYhO
    19:22:void <init>(launcher.LauncherConfig,java.lang.String,java.lang.String) -> <init>
    26:27:void <init>(java.lang.String,java.lang.String) -> <init>
    31:31:launcher.request.Request$Type getType() -> getType
    36:42:launcher.client.PlayerProfile requestDo(launcher.serialize.HInput,launcher.serialize.HOutput) -> REnOc6Ki3M
    13:13:java.lang.Object requestDo(launcher.serialize.HInput,launcher.serialize.HOutput) -> requestDo
launcher.request.auth.JoinServerRequest -> launcher.klYqpkV9QX:
    java.util.regex.Pattern SERVERID_PATTERN -> REnOc6Ki3M
    java.lang.String username -> REnOc6Ki3M
    java.lang.String accessToken -> CxM7zIuYhO
    java.lang.String serverID -> Z8CBapOaom
    24:28:void <init>(launcher.LauncherConfig,java.lang.String,java.lang.String,java.lang.String) -> <init>
    32:33:void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    37:37:launcher.request.Request$Type getType() -> getType
    42:49:java.lang.Boolean requestDo(launcher.serialize.HInput,launcher.serialize.HOutput) -> REnOc6Ki3M
    54:54:boolean isValidServerID(java.lang.CharSequence) -> isValidServerID
    59:60:java.lang.String verifyServerID(java.lang.String) -> verifyServerID
    14:14:java.lang.Object requestDo(launcher.serialize.HInput,launcher.serialize.HOutput) -> requestDo
    15:15:void <clinit>() -> <clinit>
launcher.request.update.LauncherRequest -> launcher.T3xsQ3Hzd:
    java.nio.file.Path BINARY_PATH -> BINARY_PATH
    boolean EXE_BINARY -> EXE_BINARY
    31:32:void <init>(launcher.LauncherConfig) -> <init>
    36:37:void <init>() -> <init>
    41:41:launcher.request.Request$Type getType() -> getType
    47:72:launcher.request.update.LauncherRequest$Result requestDo(launcher.serialize.HInput,launcher.serialize.HOutput) -> REnOc6Ki3M
    79:98:void update(launcher.LauncherConfig,launcher.request.update.LauncherRequest$Result) -> update
    25:25:java.lang.Object requestDo(launcher.serialize.HInput,launcher.serialize.HOutput) -> requestDo
    26:27:void <clinit>() -> <clinit>
launcher.request.update.LauncherRequest$1 -> launcher.Kf9df1Nw7:
launcher.request.update.LauncherRequest$Result -> launcher.dMvKouv9Ie:
    java.util.List profiles -> profiles
    byte[] binary -> REnOc6Ki3M
    105:112:void <init>(byte[],java.util.List) -> <init>
    116:116:byte[] getBinary() -> getBinary
    101:101:void <init>(byte[],java.util.List,launcher.request.update.LauncherRequest$1) -> <init>
    101:101:byte[] access$100(launcher.request.update.LauncherRequest$Result) -> REnOc6Ki3M
launcher.request.update.UpdateListRequest -> launcher.dP1WwMOLzc:
    18:19:void <init>(launcher.LauncherConfig) -> <init>
    23:24:void <init>() -> <init>
    28:28:launcher.request.Request$Type getType() -> getType
    33:42:java.util.Set requestDo(launcher.serialize.HInput,launcher.serialize.HOutput) -> REnOc6Ki3M
    15:15:java.lang.Object requestDo(launcher.serialize.HInput,launcher.serialize.HOutput) -> requestDo
launcher.request.update.UpdateRequest -> launcher.T71Ege40YQ:
    int MAX_QUEUE_SIZE -> MAX_QUEUE_SIZE
    java.lang.String dirName -> REnOc6Ki3M
    java.nio.file.Path dir -> REnOc6Ki3M
    launcher.hasher.FileNameMatcher matcher -> REnOc6Ki3M
    boolean digest -> REnOc6Ki3M
    launcher.request.update.UpdateRequest$State$Callback stateCallback -> REnOc6Ki3M
    launcher.hasher.HashedDir localDir -> REnOc6Ki3M
    long totalDownloaded -> REnOc6Ki3M
    long totalSize -> CxM7zIuYhO
    java.time.Instant startTime -> REnOc6Ki3M
    55:60:void <init>(launcher.LauncherConfig,java.lang.String,java.nio.file.Path,launcher.hasher.FileNameMatcher,boolean) -> <init>
    64:65:void <init>(java.lang.String,java.nio.file.Path,launcher.hasher.FileNameMatcher,boolean) -> <init>
    69:69:launcher.request.Request$Type getType() -> getType
    74:78:launcher.hasher.HashedDir request() -> REnOc6Ki3M
    84:147:launcher.hasher.HashedDir requestDo(launcher.serialize.HInput,launcher.serialize.HOutput) -> REnOc6Ki3M
    152:153:void setStateCallback(launcher.request.update.UpdateRequest$State$Callback) -> setStateCallback
    156:181:void deleteExtraDir(java.nio.file.Path,launcher.hasher.HashedDir,boolean) -> REnOc6Ki3M
    184:221:void downloadFile(java.nio.file.Path,launcher.hasher.HashedFile,java.io.InputStream) -> REnOc6Ki3M
    224:241:void fillActionsQueue(java.util.Queue,launcher.hasher.HashedDir) -> REnOc6Ki3M
    244:248:void updateState(java.lang.String,long,long) -> REnOc6Ki3M
    37:37:java.lang.Object request() -> request
    37:37:java.lang.Object requestDo(launcher.serialize.HInput,launcher.serialize.HOutput) -> requestDo
launcher.request.update.UpdateRequest$1 -> launcher.li5rYQCrF:
    int[] $SwitchMap$launcher$request$update$UpdateRequest$Action$Type -> REnOc6Ki3M
    int[] $SwitchMap$launcher$hasher$HashedEntry$Type -> CxM7zIuYhO
    122:163:void <clinit>() -> <clinit>
launcher.request.update.UpdateRequest$Action -> launcher.DPQn8ecwi8:
    launcher.request.update.UpdateRequest$Action CD_BACK -> REnOc6Ki3M
    launcher.request.update.UpdateRequest$Action FINISH -> CxM7zIuYhO
    launcher.request.update.UpdateRequest$Action$Type type -> REnOc6Ki3M
    java.lang.String name -> REnOc6Ki3M
    launcher.hasher.HashedEntry entry -> REnOc6Ki3M
    259:263:void <init>(launcher.request.update.UpdateRequest$Action$Type,java.lang.String,launcher.hasher.HashedEntry) -> <init>
    265:269:void <init>(launcher.serialize.HInput) -> <init>
    273:277:void write(launcher.serialize.HOutput) -> write
    251:252:void <clinit>() -> <clinit>
launcher.request.update.UpdateRequest$Action$Type -> launcher.rwg3pR8dHB:
    launcher.request.update.UpdateRequest$Action$Type CD -> REnOc6Ki3M
    launcher.request.update.UpdateRequest$Action$Type CD_BACK -> CxM7zIuYhO
    launcher.request.update.UpdateRequest$Action$Type GET -> Z8CBapOaom
    launcher.request.update.UpdateRequest$Action$Type FINISH -> LI3Bzun3i2
    launcher.serialize.stream.EnumSerializer SERIALIZER -> REnOc6Ki3M
    int n -> REnOc6Ki3M
    launcher.request.update.UpdateRequest$Action$Type[] $VALUES -> REnOc6Ki3M
    279:279:launcher.request.update.UpdateRequest$Action$Type[] values() -> values
    279:279:launcher.request.update.UpdateRequest$Action$Type valueOf(java.lang.String) -> valueOf
    284:286:void <init>(java.lang.String,int,int) -> <init>
    290:290:int getNumber() -> getNumber
    294:294:launcher.request.update.UpdateRequest$Action$Type read(launcher.serialize.HInput) -> REnOc6Ki3M
    279:281:void <clinit>() -> <clinit>
launcher.request.update.UpdateRequest$State -> launcher.KIZahkc6gq:
    long fileDownloaded -> fileDownloaded
    long fileSize -> fileSize
    long totalDownloaded -> totalDownloaded
    long totalSize -> totalSize
    java.lang.String filePath -> filePath
    java.time.Duration duration -> duration
    307:316:void <init>(java.lang.String,long,long,long,long,java.time.Duration) -> <init>
    320:324:double getBps() -> getBps
    329:333:java.time.Duration getEstimatedTime() -> getEstimatedTime
    338:338:double getFileDownloadedKiB() -> getFileDownloadedKiB
    343:343:double getFileDownloadedMiB() -> getFileDownloadedMiB
    348:351:double getFileDownloadedPart() -> getFileDownloadedPart
    356:356:long getFileRemaining() -> getFileRemaining
    361:361:double getFileRemainingKiB() -> getFileRemainingKiB
    366:366:double getFileRemainingMiB() -> getFileRemainingMiB
    371:371:double getFileSizeKiB() -> getFileSizeKiB
    376:376:double getFileSizeMiB() -> getFileSizeMiB
    381:381:double getTotalDownloadedKiB() -> getTotalDownloadedKiB
    386:386:double getTotalDownloadedMiB() -> getTotalDownloadedMiB
    391:394:double getTotalDownloadedPart() -> getTotalDownloadedPart
    399:399:long getTotalRemaining() -> getTotalRemaining
    404:404:double getTotalRemainingKiB() -> getTotalRemainingKiB
    409:409:double getTotalRemainingMiB() -> getTotalRemainingMiB
    414:414:double getTotalSizeKiB() -> getTotalSizeKiB
    419:419:double getTotalSizeMiB() -> getTotalSizeMiB
launcher.request.update.UpdateRequest$State$Callback -> launcher.CDCRznTyry:
    void call(launcher.request.update.UpdateRequest$State) -> REnOc6Ki3M
launcher.request.uuid.BatchProfileByUsernameRequest -> launcher.FiZo35pRi:
    int MAX_BATCH_SIZE -> MAX_BATCH_SIZE
    java.lang.String[] usernames -> REnOc6Ki3M
    20:26:void <init>(launcher.LauncherConfig,java.lang.String[]) -> <init>
    30:31:void <init>(java.lang.String[]) -> <init>
    35:35:launcher.request.Request$Type getType() -> getType
    40:53:launcher.client.PlayerProfile[] requestDo(launcher.serialize.HInput,launcher.serialize.HOutput) -> REnOc6Ki3M
    14:14:java.lang.Object requestDo(launcher.serialize.HInput,launcher.serialize.HOutput) -> requestDo
launcher.request.uuid.ProfileByUUIDRequest -> launcher.j2M1yYiPB:
    java.util.UUID uuid -> REnOc6Ki3M
    19:21:void <init>(launcher.LauncherConfig,java.util.UUID) -> <init>
    25:26:void <init>(java.util.UUID) -> <init>
    30:30:launcher.request.Request$Type getType() -> getType
    35:39:launcher.client.PlayerProfile requestDo(launcher.serialize.HInput,launcher.serialize.HOutput) -> REnOc6Ki3M
    14:14:java.lang.Object requestDo(launcher.serialize.HInput,launcher.serialize.HOutput) -> requestDo
launcher.request.uuid.ProfileByUsernameRequest -> launcher.iInnMGKxn:
    java.lang.String username -> REnOc6Ki3M
    18:20:void <init>(launcher.LauncherConfig,java.lang.String) -> <init>
    24:25:void <init>(java.lang.String) -> <init>
    29:29:launcher.request.Request$Type getType() -> getType
    34:38:launcher.client.PlayerProfile requestDo(launcher.serialize.HInput,launcher.serialize.HOutput) -> REnOc6Ki3M
    13:13:java.lang.Object requestDo(launcher.serialize.HInput,launcher.serialize.HOutput) -> requestDo
launcher.serialize.HInput -> launcher.Y7LY9NXa0E:
    java.io.InputStream stream -> stream
    18:20:void <init>(java.io.InputStream) -> <init>
    23:25:void <init>(byte[]) -> <init>
    29:30:void close() -> close
    34:34:java.lang.String readASCII(int) -> readASCII
    39:39:java.math.BigInteger readBigInteger(int) -> readBigInteger
    44:51:boolean readBoolean() -> readBoolean
    57:59:byte[] readByteArray(int) -> readByteArray
    64:64:int readInt() -> readInt
    69:72:int readLength(int) -> readLength
    77:77:long readLong() -> readLong
    82:82:short readShort() -> readShort
    87:87:java.lang.String readString(int) -> readString
    92:92:java.util.UUID readUUID() -> readUUID
    97:101:int readUnsignedByte() -> readUnsignedByte
    106:106:int readUnsignedShort() -> readUnsignedShort
    111:121:int readVarInt() -> readVarInt
    126:136:long readVarLong() -> readVarLong
launcher.serialize.HOutput -> launcher.VOHElQ0SqX:
    java.io.OutputStream stream -> stream
    17:19:void <init>(java.io.OutputStream) -> <init>
    23:24:void close() -> close
    28:29:void flush() -> flush
    33:34:void writeASCII(java.lang.String,int) -> writeASCII
    38:39:void writeBigInteger(java.math.BigInteger,int) -> writeBigInteger
    43:44:void writeBoolean(boolean) -> writeBoolean
    48:50:void writeByteArray(byte[],int) -> writeByteArray
    54:58:void writeInt(int) -> writeInt
    62:66:void writeLength(int,int) -> writeLength
    70:72:void writeLong(long) -> writeLong
    76:78:void writeShort(short) -> writeShort
    82:83:void writeString(java.lang.String,int) -> writeString
    87:89:void writeUUID(java.util.UUID) -> writeUUID
    93:94:void writeUnsignedByte(int) -> writeUnsignedByte
    98:103:void writeVarInt(int) -> writeVarInt
    107:112:void writeVarLong(long) -> writeVarLong
launcher.serialize.config.ConfigObject -> launcher.zsCo9O2gmW:
    launcher.serialize.config.entry.BlockConfigEntry block -> block
    15:17:void <init>(launcher.serialize.config.entry.BlockConfigEntry) -> <init>
    21:22:void write(launcher.serialize.HOutput) -> write
launcher.serialize.config.ConfigObject$Adapter -> launcher.KIbsS6nwjQ:
    launcher.serialize.config.ConfigObject convert(launcher.serialize.config.entry.BlockConfigEntry) -> convert
launcher.serialize.config.TextConfigReader -> launcher.dXV4SDC6Gs:
    java.io.LineNumberReader reader -> REnOc6Ki3M
    boolean ro -> REnOc6Ki3M
    java.lang.String skipped -> REnOc6Ki3M
    int ch -> REnOc6Ki3M
    24:30:void <init>(java.io.Reader,boolean) -> <init>
    33:33:java.io.IOException newIOException(java.lang.String) -> REnOc6Ki3M
    37:41:int nextChar(boolean) -> REnOc6Ki3M
    45:46:int nextClean(boolean) -> CxM7zIuYhO
    50:88:launcher.serialize.config.entry.BlockConfigEntry readBlock(int) -> REnOc6Ki3M
    93:117:launcher.serialize.config.entry.ConfigEntry readEntry(int) -> REnOc6Ki3M
    122:122:launcher.serialize.config.entry.ConfigEntry readInteger(int) -> CxM7zIuYhO
    126:157:launcher.serialize.config.entry.ConfigEntry readList(int) -> Z8CBapOaom
    161:203:launcher.serialize.config.entry.ConfigEntry readString(int) -> LI3Bzun3i2
    208:219:java.lang.String readToken() -> REnOc6Ki3M
    223:227:void skipComment(java.lang.StringBuilder,boolean) -> REnOc6Ki3M
    230:240:int skipWhitespace(boolean) -> Z8CBapOaom
    245:245:launcher.serialize.config.entry.BlockConfigEntry read(java.io.Reader,boolean) -> read
launcher.serialize.config.TextConfigWriter -> launcher.xVX8XjKYH:
    java.io.Writer writer -> REnOc6Ki3M
    boolean comments -> REnOc6Ki3M
    22:25:void <init>(java.io.Writer,boolean) -> <init>
    29:57:void writeBlock(launcher.serialize.config.entry.BlockConfigEntry,boolean) -> REnOc6Ki3M
    60:61:void writeBoolean(launcher.serialize.config.entry.BooleanConfigEntry) -> REnOc6Ki3M
    64:67:void writeComment(java.lang.String) -> REnOc6Ki3M
    70:90:void writeEntry(launcher.serialize.config.entry.ConfigEntry) -> REnOc6Ki3M
    93:94:void writeInteger(launcher.serialize.config.entry.IntegerConfigEntry) -> REnOc6Ki3M
    97:116:void writeList(launcher.serialize.config.entry.ListConfigEntry) -> REnOc6Ki3M
    119:154:void writeString(launcher.serialize.config.entry.StringConfigEntry) -> REnOc6Ki3M
    158:159:void write(launcher.serialize.config.entry.BlockConfigEntry,java.io.Writer,boolean) -> write
launcher.serialize.config.TextConfigWriter$1 -> launcher.VidDaxOVvt:
    int[] $SwitchMap$launcher$serialize$config$entry$ConfigEntry$Type -> REnOc6Ki3M
    71:71:void <clinit>() -> <clinit>
launcher.serialize.config.entry.BlockConfigEntry -> launcher.RHYbOfxgbj:
    19:20:void <init>(java.util.Map,boolean,int) -> <init>
    24:25:void <init>(int) -> <init>
    29:30:void <init>(launcher.serialize.HInput,boolean) -> <init>
    34:34:launcher.serialize.config.entry.ConfigEntry$Type getType() -> getType
    39:40:java.util.Map getValue() -> REnOc6Ki3M
    45:50:void uncheckedSetValue(java.util.Map) -> REnOc6Ki3M
    54:60:void write(launcher.serialize.HOutput) -> write
    64:65:void clear() -> clear
    69:74:launcher.serialize.config.entry.ConfigEntry getEntry(java.lang.String,java.lang.Class) -> getEntry
    79:79:java.lang.Object getEntryValue(java.lang.String,java.lang.Class) -> getEntryValue
    84:84:boolean hasEntry(java.lang.String) -> hasEntry
    89:90:void remove(java.lang.String) -> remove
    94:95:void setEntry(java.lang.String,launcher.serialize.config.entry.ConfigEntry) -> setEntry
    98:107:java.util.Map readMap(launcher.serialize.HInput,boolean) -> REnOc6Ki3M
    16:16:void uncheckedSetValue(java.lang.Object) -> REnOc6Ki3M
    16:16:java.lang.Object getValue() -> getValue
launcher.serialize.config.entry.BooleanConfigEntry -> launcher.MijYN2gR8:
    12:13:void <init>(boolean,boolean,int) -> <init>
    17:18:void <init>(launcher.serialize.HInput,boolean) -> <init>
    22:22:launcher.serialize.config.entry.ConfigEntry$Type getType() -> getType
    27:28:void write(launcher.serialize.HOutput) -> write
launcher.serialize.config.entry.ConfigEntry -> launcher.WZ22Yi88lZ:
    boolean ro -> ro
    java.lang.String[] comments -> REnOc6Ki3M
    java.lang.Object value -> REnOc6Ki3M
    18:22:void <init>(java.lang.Object,boolean,int) -> <init>
    launcher.serialize.config.entry.ConfigEntry$Type getType() -> getType
    29:32:java.lang.String getComment(int) -> getComment
    38:38:java.lang.Object getValue() -> getValue
    43:45:void setValue(java.lang.Object) -> setValue
    49:50:void setComment(int,java.lang.String) -> setComment
    53:56:void ensureWritable() -> REnOc6Ki3M
    60:61:void uncheckedSetValue(java.lang.Object) -> REnOc6Ki3M
    64:77:launcher.serialize.config.entry.ConfigEntry readEntry(launcher.serialize.HInput,boolean) -> REnOc6Ki3M
    82:84:void writeEntry(launcher.serialize.config.entry.ConfigEntry,launcher.serialize.HOutput) -> REnOc6Ki3M
launcher.serialize.config.entry.ConfigEntry$1 -> launcher.Qe8z8WE0ow:
    int[] $SwitchMap$launcher$serialize$config$entry$ConfigEntry$Type -> REnOc6Ki3M
    65:65:void <clinit>() -> <clinit>
launcher.serialize.config.entry.ConfigEntry$Type -> launcher.ybp3aT7ZEj:
    launcher.serialize.config.entry.ConfigEntry$Type BLOCK -> BLOCK
    launcher.serialize.config.entry.ConfigEntry$Type BOOLEAN -> BOOLEAN
    launcher.serialize.config.entry.ConfigEntry$Type INTEGER -> INTEGER
    launcher.serialize.config.entry.ConfigEntry$Type STRING -> STRING
    launcher.serialize.config.entry.ConfigEntry$Type LIST -> LIST
    launcher.serialize.stream.EnumSerializer SERIALIZER -> SERIALIZER
    int n -> n
    launcher.serialize.config.entry.ConfigEntry$Type[] $VALUES -> $VALUES
    86:86:launcher.serialize.config.entry.ConfigEntry$Type[] values() -> values
    86:86:launcher.serialize.config.entry.ConfigEntry$Type valueOf(java.lang.String) -> valueOf
    92:94:void <init>(java.lang.String,int,int) -> <init>
    98:98:int getNumber() -> getNumber
    102:102:launcher.serialize.config.entry.ConfigEntry$Type read(launcher.serialize.HInput) -> read
    86:89:void <clinit>() -> <clinit>
launcher.serialize.config.entry.IntegerConfigEntry -> launcher.nYwzDMskKD:
    12:13:void <init>(int,boolean,int) -> <init>
    17:18:void <init>(launcher.serialize.HInput,boolean) -> <init>
    22:22:launcher.serialize.config.entry.ConfigEntry$Type getType() -> getType
    27:28:void write(launcher.serialize.HOutput) -> write
launcher.serialize.config.entry.ListConfigEntry -> launcher.vxNLCF4OVh:
    16:17:void <init>(java.util.List,boolean,int) -> <init>
    21:22:void <init>(launcher.serialize.HInput,boolean) -> <init>
    26:26:launcher.serialize.config.entry.ConfigEntry$Type getType() -> getType
    31:33:void uncheckedSetValue(java.util.List) -> REnOc6Ki3M
    37:42:void write(launcher.serialize.HOutput) -> write
    46:46:java.util.stream.Stream stream(java.lang.Class) -> stream
    51:54:void verifyOfType(launcher.serialize.config.entry.ConfigEntry$Type) -> verifyOfType
    57:62:java.util.List readList(launcher.serialize.HInput,boolean) -> REnOc6Ki3M
    13:13:void uncheckedSetValue(java.lang.Object) -> REnOc6Ki3M
    51:51:boolean lambda$verifyOfType$0(launcher.serialize.config.entry.ConfigEntry$Type,launcher.serialize.config.entry.ConfigEntry) -> REnOc6Ki3M
launcher.serialize.config.entry.StringConfigEntry -> launcher.RbUQr0O0mV:
    12:13:void <init>(java.lang.String,boolean,int) -> <init>
    17:18:void <init>(launcher.serialize.HInput,boolean) -> <init>
    22:22:launcher.serialize.config.entry.ConfigEntry$Type getType() -> getType
    27:28:void uncheckedSetValue(java.lang.String) -> REnOc6Ki3M
    32:33:void write(launcher.serialize.HOutput) -> write
    9:9:void uncheckedSetValue(java.lang.Object) -> REnOc6Ki3M
launcher.serialize.stream.EnumSerializer -> launcher.rmujr3wEHg:
    java.util.Map map -> REnOc6Ki3M
    14:21:void <init>(java.lang.Class) -> <init>
    25:26:java.lang.Enum read(launcher.serialize.HInput) -> read
    31:32:void write(launcher.serialize.HOutput,launcher.serialize.stream.EnumSerializer$Itf) -> write
launcher.serialize.stream.EnumSerializer$Itf -> launcher.ldnqKt2qJ:
    int getNumber() -> getNumber
launcher.serialize.stream.StreamObject -> launcher.G4VHVNt6W:
    11:11:void <init>() -> <init>
    void write(launcher.serialize.HOutput) -> write
    19:24:byte[] write() -> write
launcher.serialize.stream.StreamObject$Adapter -> launcher.QXsF0N8YA:
    launcher.serialize.stream.StreamObject convert(launcher.serialize.HInput) -> convert
launcher.ssl.LauncherKeyStore -> launcher.cpkoMU8si8:
    12:12:void <init>() -> <init>
    14:23:java.security.KeyStore getKeyStore(java.lang.String,java.lang.String) -> REnOc6Ki3M
launcher.ssl.LauncherSSLContext -> launcher.ujBg0HXD7R:
    javax.net.ssl.SSLServerSocketFactory ssf -> REnOc6Ki3M
    javax.net.ssl.SSLSocketFactory sf -> REnOc6Ki3M
    javax.net.ssl.SSLContext sc -> REnOc6Ki3M
    14:25:void <init>(java.security.KeyStore,java.lang.String) -> <init>
    26:34:void <init>() -> <init>
launcher.ssl.LauncherTrustManager -> launcher.uVxCEhJ3aw:
    5:5:void <init>() -> <init>
    7:7:void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    10:10:void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    13:13:java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
ru.zaxar163.GuardBind -> ru.zaxar163.GuardBind:
    8:8:void <init>() -> <init>
    boolean avnStartDefence() -> avnStartDefence
    void avnStopDefence() -> avnStopDefence
    boolean avnIsStarted() -> avnIsStarted
    boolean avnIsStaticLoaded() -> avnIsStaticLoaded
    void avnEliminateThreat(int) -> avnEliminateThreat
    long avnGetCpuid() -> avnGetCpuid
    long avnGetSmbiosId() -> avnGetSmbiosId
    long avnGetMacId() -> avnGetMacId
    long avnGetHddId() -> avnGetHddId
    long avnGetHash(byte[]) -> avnGetHash
    void setCheckTime(int) -> setCheckTime
    int getCheckTime() -> getCheckTime
    void avnRegisterThreatNotifier(ru.zaxar163.GuardBind$ThreatNotifier) -> avnRegisterThreatNotifier
    37:46:void <clinit>() -> <clinit>
ru.zaxar163.GuardBind$ThreatNotifier -> ru.zaxar163.GuardBind$ThreatNotifier:
    boolean call(int) -> call
ru.zaxar163.GuardBind$ThreatType -> ru.zaxar163.GuardBind$ThreatType:
    ru.zaxar163.GuardBind$ThreatType UNKNOWN_THREAT -> REnOc6Ki3M
    ru.zaxar163.GuardBind$ThreatType REMOTE_THREAD -> CxM7zIuYhO
    ru.zaxar163.GuardBind$ThreatType WINDOWS_HOOKS_INJECTION -> Z8CBapOaom
    ru.zaxar163.GuardBind$ThreatType UNKNOWN_TRACE_LOAD_LIBRARY -> LI3Bzun3i2
    ru.zaxar163.GuardBind$ThreatType CONTEXT_MANIPULATION -> rmNwuGHNBo
    ru.zaxar163.GuardBind$ThreatType CRITICAL_MODULE_CHANGED -> Ol5j4AUN0M
    ru.zaxar163.GuardBind$ThreatType UNKNOWN_INTERCEPTION -> mgXgJr6phP
    ru.zaxar163.GuardBind$ThreatType UNKNOWN_MEMORY_REGION -> D5BTZ0MHrC
    ru.zaxar163.GuardBind$ThreatType UNKNOWN_APC_DESTINATION -> w42vVwSrSW
    int id -> REnOc6Ki3M
    ru.zaxar163.GuardBind$ThreatType[] $VALUES -> REnOc6Ki3M
    9:9:ru.zaxar163.GuardBind$ThreatType[] values() -> values
    9:9:ru.zaxar163.GuardBind$ThreatType valueOf(java.lang.String) -> valueOf
    22:24:void <init>(java.lang.String,int,int) -> <init>
    26:26:int getValue() -> REnOc6Ki3M
    28:28:ru.zaxar163.GuardBind$ThreatType getThreat(int) -> REnOc6Ki3M
    9:18:void <clinit>() -> <clinit>
