buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.sf.proguard', name: 'proguard-gradle', version: '6.0.3'
    }
}

def mainClassName = "launcher.ClientLauncher"

repositories {
	maven {
        url "http://repo.spring.io/plugins-release/"
    }
}

jar {
    from { configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) } }
	manifest.attributes("Main-Class": mainClassName);
}

dependencies {
    compile files('../compat/authlib/authlib-clean.jar')
    compile "com.eclipsesource.minimal-json:minimal-json:0.9.4"
    compile "com.google.code.gson:gson:2.8.5"
    compile "com.google.guava:guava:26.0-jre"
	compile project(":libLauncher")
	compileOnly "org.jline:jline:3.9.0"
}

task obfTask(type: proguard.gradle.ProGuardTask) {
	dependsOn tasks.jar
    configuration new File('proguard/Launcher.pro')
    injars tasks.jar.archivePath
    outjars new File(buildDir, 'libs/Launcher-obf.jar')
}

task signJar(description: 'to Sign JAR.',group: 'Build', overwrite: true){
	dependsOn tasks.jar
	doLast{
		println ":$project.name:${name}"
		def signdir  = new File("$buildDir/jars/signed")
		signdir.mkdirs()
		ant.signjar(
		destDir: "${signdir.absolutePath}",
                jar: new File(buildDir, 'libs/Launcher-obf.jar').getAbsolutePath(),
                alias:keyalias,
                storetype:"jks",
                keystore:"${keystoreFile.absolutePath}",
                storepass:keystorepass,
                verbose:true,
                preservelastmodified:"true"
		)
	}
}

build.dependsOn tasks.obfTask